Terminals which are not used

   MODULE
   PROCEDURE
   BEG
   END
   EXIT
   RETURN
   DO
   LOOP
   WHILE
   REPEAT
   FOR
   CONTINUE
   BREAK
   CASE
   IF
   THEN
   ELSE
   RECORD
   TYPE
   USE
   VAR
   ARRAY
   BOOLEAN
   CHAR
   CONST
   REAL
   STRING
   INTEGER
   STRINGV
   UTIL
   FN
   IN


Rules never reduced

   44 assign_expr: var_sym assign_sym var_sym

   51 print_expr: PRINTLN var_sym


State 15 conflicts: 1 shift/reduce, 1 reduce/reduce
State 17 conflicts: 6 shift/reduce
State 22 conflicts: 2 reduce/reduce
State 24 conflicts: 5 shift/reduce
State 26 conflicts: 1 reduce/reduce
State 35 conflicts: 15 reduce/reduce
State 37 conflicts: 15 reduce/reduce
State 39 conflicts: 6 shift/reduce
State 72 conflicts: 1 reduce/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: /* empty */
    2      | stmts boolean_expr ';'
    3      | stmts arith_expr ';'
    4      | stmts int_expr ';'
    5      | stmts assign_expr ';'
    6      | stmts print_expr ';'
    7      | stmts read_expr ';'

    8 var_sym: ID

    9 arith_expr: '(' arith_expr ')'
   10           | arith_expr '+' arith_expr
   11           | arith_expr '-' arith_expr
   12           | arith_expr '*' arith_expr
   13           | arith_expr '/' arith_expr
   14           | arith_expr '%' arith_expr
   15           | '-' arith_expr
   16           | '+' arith_expr
   17           | REALV
   18           | int_expr

   19 int_expr: '(' int_expr ')'
   20         | int_expr '+' int_expr
   21         | int_expr '-' int_expr
   22         | int_expr '*' int_expr
   23         | int_expr '/' int_expr
   24         | int_expr '%' int_expr
   25         | '-' int_expr
   26         | '+' int_expr
   27         | var_sym
   28         | INTEGERV

   29 boolean_expr: '(' boolean_expr ')'
   30             | NOTL boolean_expr
   31             | boolean_expr ANDL boolean_expr
   32             | boolean_expr ORL boolean_expr
   33             | arith_expr LT arith_expr
   34             | arith_expr LEQ arith_expr
   35             | arith_expr EQ arith_expr
   36             | arith_expr GEQ arith_expr
   37             | arith_expr GT arith_expr
   38             | arith_expr NEQ arith_expr
   39             | TRUE
   40             | FALSE
   41             | var_sym

   42 assign_sym: EQ
   43           | ASSIGN

   44 assign_expr: var_sym assign_sym var_sym
   45            | var_sym assign_sym arith_expr
   46            | var_sym assign_sym boolean_expr

   47 print_expr: PRINT arith_expr
   48           | PRINTLN arith_expr
   49           | PRINT boolean_expr
   50           | PRINTLN boolean_expr
   51           | PRINTLN var_sym

   52 read_expr: READ var_sym


Terminals, with rules where they appear

$end (0) 0
'%' (37) 14 24
'(' (40) 9 19 29
')' (41) 9 19 29
'*' (42) 12 22
'+' (43) 10 16 20 26
'-' (45) 11 15 21 25
'/' (47) 13 23
';' (59) 2 3 4 5 6 7
error (256)
MODULE (258)
PROCEDURE (259)
BEG (260)
END (261)
EXIT (262)
RETURN (263)
DO (264)
LOOP (265)
WHILE (266)
REPEAT (267)
FOR (268)
CONTINUE (269)
BREAK (270)
CASE (271)
IF (272)
THEN (273)
ELSE (274)
RECORD (275)
TYPE (276)
USE (277)
VAR (278)
ARRAY (279)
BOOLEAN (280)
CHAR (281)
CONST (282)
REAL (283)
STRING (284)
INTEGER (285)
ID (286) 8
TRUE (287) 39
FALSE (288) 40
STRINGV (289)
REALV (290) 17
INTEGERV (291) 28
PRINT (292) 47 49
PRINTLN (293) 48 50 51
UTIL (294)
FN (295)
IN (296)
READ (297) 52
LT (298) 33
LEQ (299) 34
GT (300) 37
GEQ (301) 36
EQ (302) 35 42
NEQ (303) 38
ANDL (304) 31
ORL (305) 32
NOTL (306) 30
ASSIGN (307) 43
UNARY (308)


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
stmts (63)
    on left: 1 2 3 4 5 6 7, on right: 0 2 3 4 5 6 7
var_sym (64)
    on left: 8, on right: 27 41 44 45 46 51 52
arith_expr (65)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 3 9 10 11 12 13
    14 15 16 33 34 35 36 37 38 45 47 48
int_expr (66)
    on left: 19 20 21 22 23 24 25 26 27 28, on right: 4 18 19 20 21
    22 23 24 25 26
boolean_expr (67)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41,
    on right: 2 29 30 31 32 46 49 50
assign_sym (68)
    on left: 42 43, on right: 44 45 46
assign_expr (69)
    on left: 44 45 46, on right: 5
print_expr (70)
    on left: 47 48 49 50 51, on right: 6
read_expr (71)
    on left: 52, on right: 7


state 0

    0 $accept: . stmts $end

    $default  reduce using rule 1 (stmts)

    stmts  go to state 1


state 1

    0 $accept: stmts . $end
    2 stmts: stmts . boolean_expr ';'
    3      | stmts . arith_expr ';'
    4      | stmts . int_expr ';'
    5      | stmts . assign_expr ';'
    6      | stmts . print_expr ';'
    7      | stmts . read_expr ';'

    $end      shift, and go to state 2
    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    READ      shift, and go to state 10
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 15
    arith_expr    go to state 16
    int_expr      go to state 17
    boolean_expr  go to state 18
    assign_expr   go to state 19
    print_expr    go to state 20
    read_expr     go to state 21


state 2

    0 $accept: stmts $end .

    $default  accept


state 3

    8 var_sym: ID .

    $default  reduce using rule 8 (var_sym)


state 4

   39 boolean_expr: TRUE .

    $default  reduce using rule 39 (boolean_expr)


state 5

   40 boolean_expr: FALSE .

    $default  reduce using rule 40 (boolean_expr)


state 6

   17 arith_expr: REALV .

    $default  reduce using rule 17 (arith_expr)


state 7

   28 int_expr: INTEGERV .

    $default  reduce using rule 28 (int_expr)


state 8

   47 print_expr: PRINT . arith_expr
   49           | PRINT . boolean_expr

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 22
    arith_expr    go to state 23
    int_expr      go to state 24
    boolean_expr  go to state 25


state 9

   48 print_expr: PRINTLN . arith_expr
   50           | PRINTLN . boolean_expr
   51           | PRINTLN . var_sym

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 26
    arith_expr    go to state 27
    int_expr      go to state 24
    boolean_expr  go to state 28


state 10

   52 read_expr: READ . var_sym

    ID  shift, and go to state 3

    var_sym  go to state 29


state 11

   30 boolean_expr: NOTL . boolean_expr

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 22
    arith_expr    go to state 30
    int_expr      go to state 24
    boolean_expr  go to state 31


state 12

   16 arith_expr: '+' . arith_expr
   26 int_expr: '+' . int_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 34
    int_expr    go to state 35


state 13

   15 arith_expr: '-' . arith_expr
   25 int_expr: '-' . int_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 36
    int_expr    go to state 37


state 14

    9 arith_expr: '(' . arith_expr ')'
   19 int_expr: '(' . int_expr ')'
   29 boolean_expr: '(' . boolean_expr ')'

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 22
    arith_expr    go to state 38
    int_expr      go to state 39
    boolean_expr  go to state 40


state 15

   27 int_expr: var_sym .
   41 boolean_expr: var_sym .
   44 assign_expr: var_sym . assign_sym var_sym
   45            | var_sym . assign_sym arith_expr
   46            | var_sym . assign_sym boolean_expr

    EQ      shift, and go to state 41
    ASSIGN  shift, and go to state 42

    EQ        [reduce using rule 27 (int_expr)]
    ANDL      reduce using rule 41 (boolean_expr)
    ORL       reduce using rule 41 (boolean_expr)
    ';'       reduce using rule 27 (int_expr)
    ';'       [reduce using rule 41 (boolean_expr)]
    $default  reduce using rule 27 (int_expr)

    assign_sym  go to state 43


state 16

    3 stmts: stmts arith_expr . ';'
   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr . LT arith_expr
   34             | arith_expr . LEQ arith_expr
   35             | arith_expr . EQ arith_expr
   36             | arith_expr . GEQ arith_expr
   37             | arith_expr . GT arith_expr
   38             | arith_expr . NEQ arith_expr

    LT   shift, and go to state 44
    LEQ  shift, and go to state 45
    GT   shift, and go to state 46
    GEQ  shift, and go to state 47
    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    ';'  shift, and go to state 55


state 17

    4 stmts: stmts int_expr . ';'
   18 arith_expr: int_expr .
   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ';'  shift, and go to state 61

    '+'       [reduce using rule 18 (arith_expr)]
    '-'       [reduce using rule 18 (arith_expr)]
    '*'       [reduce using rule 18 (arith_expr)]
    '/'       [reduce using rule 18 (arith_expr)]
    '%'       [reduce using rule 18 (arith_expr)]
    ';'       [reduce using rule 18 (arith_expr)]
    $default  reduce using rule 18 (arith_expr)


state 18

    2 stmts: stmts boolean_expr . ';'
   31 boolean_expr: boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr

    ANDL  shift, and go to state 62
    ORL   shift, and go to state 63
    ';'   shift, and go to state 64


state 19

    5 stmts: stmts assign_expr . ';'

    ';'  shift, and go to state 65


state 20

    6 stmts: stmts print_expr . ';'

    ';'  shift, and go to state 66


state 21

    7 stmts: stmts read_expr . ';'

    ';'  shift, and go to state 67


state 22

   27 int_expr: var_sym .
   41 boolean_expr: var_sym .

    ANDL      reduce using rule 41 (boolean_expr)
    ORL       reduce using rule 41 (boolean_expr)
    ';'       reduce using rule 27 (int_expr)
    ';'       [reduce using rule 41 (boolean_expr)]
    ')'       reduce using rule 27 (int_expr)
    ')'       [reduce using rule 41 (boolean_expr)]
    $default  reduce using rule 27 (int_expr)


state 23

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr . LT arith_expr
   34             | arith_expr . LEQ arith_expr
   35             | arith_expr . EQ arith_expr
   36             | arith_expr . GEQ arith_expr
   37             | arith_expr . GT arith_expr
   38             | arith_expr . NEQ arith_expr
   47 print_expr: PRINT arith_expr .

    LT   shift, and go to state 44
    LEQ  shift, and go to state 45
    GT   shift, and go to state 46
    GEQ  shift, and go to state 47
    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 47 (print_expr)


state 24

   18 arith_expr: int_expr .
   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    '+'       [reduce using rule 18 (arith_expr)]
    '-'       [reduce using rule 18 (arith_expr)]
    '*'       [reduce using rule 18 (arith_expr)]
    '/'       [reduce using rule 18 (arith_expr)]
    '%'       [reduce using rule 18 (arith_expr)]
    $default  reduce using rule 18 (arith_expr)


state 25

   31 boolean_expr: boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr
   49 print_expr: PRINT boolean_expr .

    ANDL  shift, and go to state 62
    ORL   shift, and go to state 63

    $default  reduce using rule 49 (print_expr)


state 26

   27 int_expr: var_sym .
   41 boolean_expr: var_sym .
   51 print_expr: PRINTLN var_sym .

    ANDL      reduce using rule 41 (boolean_expr)
    ORL       reduce using rule 41 (boolean_expr)
    ';'       reduce using rule 27 (int_expr)
    ';'       [reduce using rule 41 (boolean_expr)]
    ';'       [reduce using rule 51 (print_expr)]
    $default  reduce using rule 27 (int_expr)


state 27

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr . LT arith_expr
   34             | arith_expr . LEQ arith_expr
   35             | arith_expr . EQ arith_expr
   36             | arith_expr . GEQ arith_expr
   37             | arith_expr . GT arith_expr
   38             | arith_expr . NEQ arith_expr
   48 print_expr: PRINTLN arith_expr .

    LT   shift, and go to state 44
    LEQ  shift, and go to state 45
    GT   shift, and go to state 46
    GEQ  shift, and go to state 47
    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 48 (print_expr)


state 28

   31 boolean_expr: boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr
   50 print_expr: PRINTLN boolean_expr .

    ANDL  shift, and go to state 62
    ORL   shift, and go to state 63

    $default  reduce using rule 50 (print_expr)


state 29

   52 read_expr: READ var_sym .

    $default  reduce using rule 52 (read_expr)


state 30

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr . LT arith_expr
   34             | arith_expr . LEQ arith_expr
   35             | arith_expr . EQ arith_expr
   36             | arith_expr . GEQ arith_expr
   37             | arith_expr . GT arith_expr
   38             | arith_expr . NEQ arith_expr

    LT   shift, and go to state 44
    LEQ  shift, and go to state 45
    GT   shift, and go to state 46
    GEQ  shift, and go to state 47
    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54


state 31

   30 boolean_expr: NOTL boolean_expr .
   31             | boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr

    $default  reduce using rule 30 (boolean_expr)


state 32

    9 arith_expr: '(' . arith_expr ')'
   19 int_expr: '(' . int_expr ')'

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 68
    int_expr    go to state 39


state 33

   27 int_expr: var_sym .

    $default  reduce using rule 27 (int_expr)


state 34

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   16           | '+' arith_expr .

    $default  reduce using rule 16 (arith_expr)


state 35

   18 arith_expr: int_expr .
   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr
   26         | '+' int_expr .

    LT        reduce using rule 18 (arith_expr)
    LT        [reduce using rule 26 (int_expr)]
    LEQ       reduce using rule 18 (arith_expr)
    LEQ       [reduce using rule 26 (int_expr)]
    GT        reduce using rule 18 (arith_expr)
    GT        [reduce using rule 26 (int_expr)]
    GEQ       reduce using rule 18 (arith_expr)
    GEQ       [reduce using rule 26 (int_expr)]
    EQ        reduce using rule 18 (arith_expr)
    EQ        [reduce using rule 26 (int_expr)]
    NEQ       reduce using rule 18 (arith_expr)
    NEQ       [reduce using rule 26 (int_expr)]
    ANDL      reduce using rule 18 (arith_expr)
    ANDL      [reduce using rule 26 (int_expr)]
    ORL       reduce using rule 18 (arith_expr)
    ORL       [reduce using rule 26 (int_expr)]
    '+'       reduce using rule 18 (arith_expr)
    '+'       [reduce using rule 26 (int_expr)]
    '-'       reduce using rule 18 (arith_expr)
    '-'       [reduce using rule 26 (int_expr)]
    '*'       reduce using rule 18 (arith_expr)
    '*'       [reduce using rule 26 (int_expr)]
    '/'       reduce using rule 18 (arith_expr)
    '/'       [reduce using rule 26 (int_expr)]
    '%'       reduce using rule 18 (arith_expr)
    '%'       [reduce using rule 26 (int_expr)]
    ';'       reduce using rule 18 (arith_expr)
    ';'       [reduce using rule 26 (int_expr)]
    ')'       reduce using rule 18 (arith_expr)
    ')'       [reduce using rule 26 (int_expr)]
    $default  reduce using rule 18 (arith_expr)


state 36

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   15           | '-' arith_expr .

    $default  reduce using rule 15 (arith_expr)


state 37

   18 arith_expr: int_expr .
   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr
   25         | '-' int_expr .

    LT        reduce using rule 18 (arith_expr)
    LT        [reduce using rule 25 (int_expr)]
    LEQ       reduce using rule 18 (arith_expr)
    LEQ       [reduce using rule 25 (int_expr)]
    GT        reduce using rule 18 (arith_expr)
    GT        [reduce using rule 25 (int_expr)]
    GEQ       reduce using rule 18 (arith_expr)
    GEQ       [reduce using rule 25 (int_expr)]
    EQ        reduce using rule 18 (arith_expr)
    EQ        [reduce using rule 25 (int_expr)]
    NEQ       reduce using rule 18 (arith_expr)
    NEQ       [reduce using rule 25 (int_expr)]
    ANDL      reduce using rule 18 (arith_expr)
    ANDL      [reduce using rule 25 (int_expr)]
    ORL       reduce using rule 18 (arith_expr)
    ORL       [reduce using rule 25 (int_expr)]
    '+'       reduce using rule 18 (arith_expr)
    '+'       [reduce using rule 25 (int_expr)]
    '-'       reduce using rule 18 (arith_expr)
    '-'       [reduce using rule 25 (int_expr)]
    '*'       reduce using rule 18 (arith_expr)
    '*'       [reduce using rule 25 (int_expr)]
    '/'       reduce using rule 18 (arith_expr)
    '/'       [reduce using rule 25 (int_expr)]
    '%'       reduce using rule 18 (arith_expr)
    '%'       [reduce using rule 25 (int_expr)]
    ';'       reduce using rule 18 (arith_expr)
    ';'       [reduce using rule 25 (int_expr)]
    ')'       reduce using rule 18 (arith_expr)
    ')'       [reduce using rule 25 (int_expr)]
    $default  reduce using rule 18 (arith_expr)


state 38

    9 arith_expr: '(' arith_expr . ')'
   10           | arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr . LT arith_expr
   34             | arith_expr . LEQ arith_expr
   35             | arith_expr . EQ arith_expr
   36             | arith_expr . GEQ arith_expr
   37             | arith_expr . GT arith_expr
   38             | arith_expr . NEQ arith_expr

    LT   shift, and go to state 44
    LEQ  shift, and go to state 45
    GT   shift, and go to state 46
    GEQ  shift, and go to state 47
    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    ')'  shift, and go to state 69


state 39

   18 arith_expr: int_expr .
   19 int_expr: '(' int_expr . ')'
   20         | int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 70

    '+'       [reduce using rule 18 (arith_expr)]
    '-'       [reduce using rule 18 (arith_expr)]
    '*'       [reduce using rule 18 (arith_expr)]
    '/'       [reduce using rule 18 (arith_expr)]
    '%'       [reduce using rule 18 (arith_expr)]
    ')'       [reduce using rule 18 (arith_expr)]
    $default  reduce using rule 18 (arith_expr)


state 40

   29 boolean_expr: '(' boolean_expr . ')'
   31             | boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr

    ANDL  shift, and go to state 62
    ORL   shift, and go to state 63
    ')'   shift, and go to state 71


state 41

   42 assign_sym: EQ .

    $default  reduce using rule 42 (assign_sym)


state 42

   43 assign_sym: ASSIGN .

    $default  reduce using rule 43 (assign_sym)


state 43

   44 assign_expr: var_sym assign_sym . var_sym
   45            | var_sym assign_sym . arith_expr
   46            | var_sym assign_sym . boolean_expr

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 72
    arith_expr    go to state 73
    int_expr      go to state 24
    boolean_expr  go to state 74


state 44

   33 boolean_expr: arith_expr LT . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 75
    int_expr    go to state 24


state 45

   34 boolean_expr: arith_expr LEQ . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 76
    int_expr    go to state 24


state 46

   37 boolean_expr: arith_expr GT . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 77
    int_expr    go to state 24


state 47

   36 boolean_expr: arith_expr GEQ . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 78
    int_expr    go to state 24


state 48

   35 boolean_expr: arith_expr EQ . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 79
    int_expr    go to state 24


state 49

   38 boolean_expr: arith_expr NEQ . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 80
    int_expr    go to state 24


state 50

   10 arith_expr: arith_expr '+' . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 81
    int_expr    go to state 24


state 51

   11 arith_expr: arith_expr '-' . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 82
    int_expr    go to state 24


state 52

   12 arith_expr: arith_expr '*' . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 83
    int_expr    go to state 24


state 53

   13 arith_expr: arith_expr '/' . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 84
    int_expr    go to state 24


state 54

   14 arith_expr: arith_expr '%' . arith_expr

    ID        shift, and go to state 3
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 32

    var_sym     go to state 33
    arith_expr  go to state 85
    int_expr    go to state 24


state 55

    3 stmts: stmts arith_expr ';' .

    $default  reduce using rule 3 (stmts)


state 56

   20 int_expr: int_expr '+' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 89


state 57

   21 int_expr: int_expr '-' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 90


state 58

   22 int_expr: int_expr '*' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 91


state 59

   23 int_expr: int_expr '/' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 92


state 60

   24 int_expr: int_expr '%' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 93


state 61

    4 stmts: stmts int_expr ';' .

    $default  reduce using rule 4 (stmts)


state 62

   31 boolean_expr: boolean_expr ANDL . boolean_expr

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 22
    arith_expr    go to state 30
    int_expr      go to state 24
    boolean_expr  go to state 94


state 63

   32 boolean_expr: boolean_expr ORL . boolean_expr

    ID        shift, and go to state 3
    TRUE      shift, and go to state 4
    FALSE     shift, and go to state 5
    REALV     shift, and go to state 6
    INTEGERV  shift, and go to state 7
    NOTL      shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '('       shift, and go to state 14

    var_sym       go to state 22
    arith_expr    go to state 30
    int_expr      go to state 24
    boolean_expr  go to state 95


state 64

    2 stmts: stmts boolean_expr ';' .

    $default  reduce using rule 2 (stmts)


state 65

    5 stmts: stmts assign_expr ';' .

    $default  reduce using rule 5 (stmts)


state 66

    6 stmts: stmts print_expr ';' .

    $default  reduce using rule 6 (stmts)


state 67

    7 stmts: stmts read_expr ';' .

    $default  reduce using rule 7 (stmts)


state 68

    9 arith_expr: '(' arith_expr . ')'
   10           | arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    ')'  shift, and go to state 69


state 69

    9 arith_expr: '(' arith_expr ')' .

    $default  reduce using rule 9 (arith_expr)


state 70

   19 int_expr: '(' int_expr ')' .

    $default  reduce using rule 19 (int_expr)


state 71

   29 boolean_expr: '(' boolean_expr ')' .

    $default  reduce using rule 29 (boolean_expr)


state 72

   27 int_expr: var_sym .
   41 boolean_expr: var_sym .
   44 assign_expr: var_sym assign_sym var_sym .

    ANDL      reduce using rule 41 (boolean_expr)
    ORL       reduce using rule 41 (boolean_expr)
    ';'       reduce using rule 27 (int_expr)
    ';'       [reduce using rule 41 (boolean_expr)]
    ';'       [reduce using rule 44 (assign_expr)]
    $default  reduce using rule 27 (int_expr)


state 73

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr . LT arith_expr
   34             | arith_expr . LEQ arith_expr
   35             | arith_expr . EQ arith_expr
   36             | arith_expr . GEQ arith_expr
   37             | arith_expr . GT arith_expr
   38             | arith_expr . NEQ arith_expr
   45 assign_expr: var_sym assign_sym arith_expr .

    LT   shift, and go to state 44
    LEQ  shift, and go to state 45
    GT   shift, and go to state 46
    GEQ  shift, and go to state 47
    EQ   shift, and go to state 48
    NEQ  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 45 (assign_expr)


state 74

   31 boolean_expr: boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr
   46 assign_expr: var_sym assign_sym boolean_expr .

    ANDL  shift, and go to state 62
    ORL   shift, and go to state 63

    $default  reduce using rule 46 (assign_expr)


state 75

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   33 boolean_expr: arith_expr LT arith_expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 33 (boolean_expr)


state 76

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   34 boolean_expr: arith_expr LEQ arith_expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 34 (boolean_expr)


state 77

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   37 boolean_expr: arith_expr GT arith_expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 37 (boolean_expr)


state 78

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   36 boolean_expr: arith_expr GEQ arith_expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 36 (boolean_expr)


state 79

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   35 boolean_expr: arith_expr EQ arith_expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 35 (boolean_expr)


state 80

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   38 boolean_expr: arith_expr NEQ arith_expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 38 (boolean_expr)


state 81

   10 arith_expr: arith_expr . '+' arith_expr
   10           | arith_expr '+' arith_expr .
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 10 (arith_expr)


state 82

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   11           | arith_expr '-' arith_expr .
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54

    $default  reduce using rule 11 (arith_expr)


state 83

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   12           | arith_expr '*' arith_expr .
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr

    $default  reduce using rule 12 (arith_expr)


state 84

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   13           | arith_expr '/' arith_expr .
   14           | arith_expr . '%' arith_expr

    $default  reduce using rule 13 (arith_expr)


state 85

   10 arith_expr: arith_expr . '+' arith_expr
   11           | arith_expr . '-' arith_expr
   12           | arith_expr . '*' arith_expr
   13           | arith_expr . '/' arith_expr
   14           | arith_expr . '%' arith_expr
   14           | arith_expr '%' arith_expr .

    $default  reduce using rule 14 (arith_expr)


state 86

   26 int_expr: '+' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 96


state 87

   25 int_expr: '-' . int_expr

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 97


state 88

   19 int_expr: '(' . int_expr ')'

    ID        shift, and go to state 3
    INTEGERV  shift, and go to state 7
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '('       shift, and go to state 88

    var_sym   go to state 33
    int_expr  go to state 98


state 89

   20 int_expr: int_expr . '+' int_expr
   20         | int_expr '+' int_expr .
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 20 (int_expr)


state 90

   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   21         | int_expr '-' int_expr .
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60

    $default  reduce using rule 21 (int_expr)


state 91

   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   22         | int_expr '*' int_expr .
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    $default  reduce using rule 22 (int_expr)


state 92

   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   23         | int_expr '/' int_expr .
   24         | int_expr . '%' int_expr

    $default  reduce using rule 23 (int_expr)


state 93

   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr
   24         | int_expr '%' int_expr .

    $default  reduce using rule 24 (int_expr)


state 94

   31 boolean_expr: boolean_expr . ANDL boolean_expr
   31             | boolean_expr ANDL boolean_expr .
   32             | boolean_expr . ORL boolean_expr

    $default  reduce using rule 31 (boolean_expr)


state 95

   31 boolean_expr: boolean_expr . ANDL boolean_expr
   32             | boolean_expr . ORL boolean_expr
   32             | boolean_expr ORL boolean_expr .

    $default  reduce using rule 32 (boolean_expr)


state 96

   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr
   26         | '+' int_expr .

    $default  reduce using rule 26 (int_expr)


state 97

   20 int_expr: int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr
   25         | '-' int_expr .

    $default  reduce using rule 25 (int_expr)


state 98

   19 int_expr: '(' int_expr . ')'
   20         | int_expr . '+' int_expr
   21         | int_expr . '-' int_expr
   22         | int_expr . '*' int_expr
   23         | int_expr . '/' int_expr
   24         | int_expr . '%' int_expr

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '%'  shift, and go to state 60
    ')'  shift, and go to state 70
