Terminals which are not used

   EXIT
   LOOP
   REPEAT
   FOR
   CONTINUE
   BREAK
   CASE
   RECORD
   TYPE
   USE
   CHAR
   INTID
   REALID
   BOOLID
   STRID
   FUNCID
   UTIL
   FN
   IN


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL BEG STMTS END ID '.'

    2 VAR_CONST_DECL: /* empty */
    3               | VAR_CONST_DECL VAR_DECL
    4               | VAR_CONST_DECL CONST_DECL

    5 VAR_DECL: VAR ';'
    6         | VAR ID_LIST ':' ID_TYPE ';'
    7         | VAR_DECL ID_LIST ':' ID_TYPE ';'

    8 ID_LIST: ID
    9        | ID_LIST ',' ID

   10 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' OF BASIC_TYPES
   11        | BASIC_TYPES

   12 BASIC_TYPES: BOOLEAN
   13            | INTEGER
   14            | REAL
   15            | STRING

   16 CONST_DECL: CONST ';'
   17           | CONST ID EQ VALUES ';'
   18           | CONST_DECL ID EQ VALUES ';'

   19 VALUES: INTEGERV
   20       | REALV
   21       | TRUE
   22       | FALSE
   23       | STRINGV

   24 FUNC_DECL: /* empty */

   25 @1: /* empty */

   26 @2: /* empty */

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';'

   28 FUNC_ARGS: /* empty */
   29          | '(' FUNC_VARS ')'

   30 FUNC_VARS: ID ':' ID_TYPE
   31          | FUNC_VARS ',' ID ':' ID_TYPE

   32 FUNC_RET: /* empty */
   33         | ':' ID_TYPE

   34 STMTS: /* empty */
   35      | STMTS ID ASSIGN EXPR ';'
   36      | STMTS ID EQ EXPR ';'
   37      | STMTS ID '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS ID '[' EXPR ']' EQ EXPR ';'
   39      | STMTS PRINT EXPR ';'
   40      | STMTS PRINTLN EXPR ';'
   41      | STMTS READ ID ';'
   42      | STMTS RETURN ';'
   43      | STMTS RETURN EXPR ';'
   44      | STMTS IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS IF '(' EXPR ')' THEN STMTS END ';'
   46      | STMTS WHILE '(' EXPR ')' DO STMTS END ';'
   47      | STMTS ID '(' ARG_LIST ')' ';'
   48      | STMTS ID ';'

   49 ARG_LIST: EXPR
   50         | ARG_LIST ',' EXPR

   51 EXPR: '(' EXPR ')'
   52     | EXPR '+' EXPR
   53     | EXPR '-' EXPR
   54     | EXPR '*' EXPR
   55     | EXPR '/' EXPR
   56     | EXPR '%' EXPR
   57     | '-' EXPR
   58     | EXPR LT EXPR
   59     | EXPR LEQ EXPR
   60     | EXPR EQ EXPR
   61     | EXPR GEQ EXPR
   62     | EXPR GT EXPR
   63     | EXPR NEQ EXPR
   64     | EXPR ANDL EXPR
   65     | EXPR ORL EXPR
   66     | NOTL EXPR
   67     | ID '[' EXPR ']'
   68     | ID '(' ARG_LIST ')'
   69     | ID
   70     | INTEGERV
   71     | REALV
   72     | TRUE
   73     | FALSE
   74     | STRINGV


Terminals, with rules where they appear

$end (0) 0
'%' (37) 56
'(' (40) 29 44 45 46 47 51 68
')' (41) 29 44 45 46 47 51 68
'*' (42) 54
'+' (43) 52
',' (44) 9 10 31 50
'-' (45) 53 57
'.' (46) 1
'/' (47) 55
':' (58) 6 7 30 31 33
';' (59) 5 6 7 16 17 18 27 35 36 37 38 39 40 41 42 43 44 45 46 47 48
'[' (91) 10 37 38 67
']' (93) 10 37 38 67
error (256)
MODULE (258) 1
PROCEDURE (259) 27
BEG (260) 1 27
END (261) 1 27 44 45 46
EXIT (262)
RETURN (263) 42 43
DO (264) 46
LOOP (265)
WHILE (266) 46
REPEAT (267)
FOR (268)
CONTINUE (269)
BREAK (270)
CASE (271)
IF (272) 44 45
THEN (273) 44 45
ELSE (274) 44
RECORD (275)
TYPE (276)
USE (277)
VAR (278) 5 6
BOOLEAN (279) 12
CHAR (280)
CONST (281) 16 17
REAL (282) 14
STRING (283) 15
INTEGER (284) 13
ARRAY (285) 10
OF (286) 10
TRUE (287) 21 72
FALSE (288) 22 73
STRINGV (289) 23 74
REALV (290) 20 71
INTEGERV (291) 10 19 70
ID (292) 1 8 9 17 18 27 30 31 35 36 37 38 41 47 48 67 68 69
INTID (293)
REALID (294)
BOOLID (295)
STRID (296)
FUNCID (297)
LT (298) 58
LEQ (299) 59
GT (300) 62
GEQ (301) 61
EQ (302) 17 18 36 38 60
NEQ (303) 63
ANDL (304) 64
ORL (305) 65
NOTL (306) 66
ASSIGN (307) 35 37
PRINT (308) 39
PRINTLN (309) 40
UTIL (310)
FN (311)
IN (312)
READ (313) 41
UNARY (314)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
PROGRAM (74)
    on left: 1, on right: 0
VAR_CONST_DECL (75)
    on left: 2 3 4, on right: 1 3 4 27
VAR_DECL (76)
    on left: 5 6 7, on right: 3 7
ID_LIST (77)
    on left: 8 9, on right: 6 7 9
ID_TYPE (78)
    on left: 10 11, on right: 6 7 30 31 33
BASIC_TYPES (79)
    on left: 12 13 14 15, on right: 10 11
CONST_DECL (80)
    on left: 16 17 18, on right: 4 18
VALUES (81)
    on left: 19 20 21 22 23, on right: 17 18
FUNC_DECL (82)
    on left: 24 27, on right: 1 27
@1 (83)
    on left: 25, on right: 27
@2 (84)
    on left: 26, on right: 27
FUNC_ARGS (85)
    on left: 28 29, on right: 27
FUNC_VARS (86)
    on left: 30 31, on right: 29 31
FUNC_RET (87)
    on left: 32 33, on right: 27
STMTS (88)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48,
    on right: 1 27 35 36 37 38 39 40 41 42 43 44 45 46 47 48
ARG_LIST (89)
    on left: 49 50, on right: 47 50 68
EXPR (90)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74, on right: 35 36 37 38 39 40 43 44 45 46 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67


state 0

    0 $accept: . PROGRAM $end

    MODULE  shift, and go to state 1

    PROGRAM  go to state 2


state 1

    1 PROGRAM: MODULE . ID VAR_CONST_DECL FUNC_DECL BEG STMTS END ID '.'

    ID  shift, and go to state 3


state 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


state 3

    1 PROGRAM: MODULE ID . VAR_CONST_DECL FUNC_DECL BEG STMTS END ID '.'

    $default  reduce using rule 2 (VAR_CONST_DECL)

    VAR_CONST_DECL  go to state 5


state 4

    0 $accept: PROGRAM $end .

    $default  accept


state 5

    1 PROGRAM: MODULE ID VAR_CONST_DECL . FUNC_DECL BEG STMTS END ID '.'
    3 VAR_CONST_DECL: VAR_CONST_DECL . VAR_DECL
    4               | VAR_CONST_DECL . CONST_DECL

    VAR    shift, and go to state 6
    CONST  shift, and go to state 7

    $default  reduce using rule 24 (FUNC_DECL)

    VAR_DECL    go to state 8
    CONST_DECL  go to state 9
    FUNC_DECL   go to state 10


state 6

    5 VAR_DECL: VAR . ';'
    6         | VAR . ID_LIST ':' ID_TYPE ';'

    ID   shift, and go to state 11
    ';'  shift, and go to state 12

    ID_LIST  go to state 13


state 7

   16 CONST_DECL: CONST . ';'
   17           | CONST . ID EQ VALUES ';'

    ID   shift, and go to state 14
    ';'  shift, and go to state 15


state 8

    3 VAR_CONST_DECL: VAR_CONST_DECL VAR_DECL .
    7 VAR_DECL: VAR_DECL . ID_LIST ':' ID_TYPE ';'

    ID  shift, and go to state 11

    $default  reduce using rule 3 (VAR_CONST_DECL)

    ID_LIST  go to state 16


state 9

    4 VAR_CONST_DECL: VAR_CONST_DECL CONST_DECL .
   18 CONST_DECL: CONST_DECL . ID EQ VALUES ';'

    ID  shift, and go to state 17

    $default  reduce using rule 4 (VAR_CONST_DECL)


state 10

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL . BEG STMTS END ID '.'
   27 FUNC_DECL: FUNC_DECL . @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';'

    BEG  shift, and go to state 18

    $default  reduce using rule 25 (@1)

    @1  go to state 19


state 11

    8 ID_LIST: ID .

    $default  reduce using rule 8 (ID_LIST)


state 12

    5 VAR_DECL: VAR ';' .

    $default  reduce using rule 5 (VAR_DECL)


state 13

    6 VAR_DECL: VAR ID_LIST . ':' ID_TYPE ';'
    9 ID_LIST: ID_LIST . ',' ID

    ':'  shift, and go to state 20
    ','  shift, and go to state 21


state 14

   17 CONST_DECL: CONST ID . EQ VALUES ';'

    EQ  shift, and go to state 22


state 15

   16 CONST_DECL: CONST ';' .

    $default  reduce using rule 16 (CONST_DECL)


state 16

    7 VAR_DECL: VAR_DECL ID_LIST . ':' ID_TYPE ';'
    9 ID_LIST: ID_LIST . ',' ID

    ':'  shift, and go to state 23
    ','  shift, and go to state 21


state 17

   18 CONST_DECL: CONST_DECL ID . EQ VALUES ';'

    EQ  shift, and go to state 24


state 18

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL BEG . STMTS END ID '.'

    $default  reduce using rule 34 (STMTS)

    STMTS  go to state 25


state 19

   27 FUNC_DECL: FUNC_DECL @1 . PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';'

    PROCEDURE  shift, and go to state 26


state 20

    6 VAR_DECL: VAR ID_LIST ':' . ID_TYPE ';'

    BOOLEAN  shift, and go to state 27
    REAL     shift, and go to state 28
    STRING   shift, and go to state 29
    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31

    ID_TYPE      go to state 32
    BASIC_TYPES  go to state 33


state 21

    9 ID_LIST: ID_LIST ',' . ID

    ID  shift, and go to state 34


state 22

   17 CONST_DECL: CONST ID EQ . VALUES ';'

    TRUE      shift, and go to state 35
    FALSE     shift, and go to state 36
    STRINGV   shift, and go to state 37
    REALV     shift, and go to state 38
    INTEGERV  shift, and go to state 39

    VALUES  go to state 40


state 23

    7 VAR_DECL: VAR_DECL ID_LIST ':' . ID_TYPE ';'

    BOOLEAN  shift, and go to state 27
    REAL     shift, and go to state 28
    STRING   shift, and go to state 29
    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31

    ID_TYPE      go to state 41
    BASIC_TYPES  go to state 33


state 24

   18 CONST_DECL: CONST_DECL ID EQ . VALUES ';'

    TRUE      shift, and go to state 35
    FALSE     shift, and go to state 36
    STRINGV   shift, and go to state 37
    REALV     shift, and go to state 38
    INTEGERV  shift, and go to state 39

    VALUES  go to state 42


state 25

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL BEG STMTS . END ID '.'
   35 STMTS: STMTS . ID ASSIGN EXPR ';'
   36      | STMTS . ID EQ EXPR ';'
   37      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   39      | STMTS . PRINT EXPR ';'
   40      | STMTS . PRINTLN EXPR ';'
   41      | STMTS . READ ID ';'
   42      | STMTS . RETURN ';'
   43      | STMTS . RETURN EXPR ';'
   44      | STMTS . IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS . IF '(' EXPR ')' THEN STMTS END ';'
   46      | STMTS . WHILE '(' EXPR ')' DO STMTS END ';'
   47      | STMTS . ID '(' ARG_LIST ')' ';'
   48      | STMTS . ID ';'

    END      shift, and go to state 43
    RETURN   shift, and go to state 44
    WHILE    shift, and go to state 45
    IF       shift, and go to state 46
    ID       shift, and go to state 47
    PRINT    shift, and go to state 48
    PRINTLN  shift, and go to state 49
    READ     shift, and go to state 50


state 26

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE . ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';'

    ID  shift, and go to state 51


state 27

   12 BASIC_TYPES: BOOLEAN .

    $default  reduce using rule 12 (BASIC_TYPES)


state 28

   14 BASIC_TYPES: REAL .

    $default  reduce using rule 14 (BASIC_TYPES)


state 29

   15 BASIC_TYPES: STRING .

    $default  reduce using rule 15 (BASIC_TYPES)


state 30

   13 BASIC_TYPES: INTEGER .

    $default  reduce using rule 13 (BASIC_TYPES)


state 31

   10 ID_TYPE: ARRAY . '[' INTEGERV ',' INTEGERV ']' OF BASIC_TYPES

    '['  shift, and go to state 52


state 32

    6 VAR_DECL: VAR ID_LIST ':' ID_TYPE . ';'

    ';'  shift, and go to state 53


state 33

   11 ID_TYPE: BASIC_TYPES .

    $default  reduce using rule 11 (ID_TYPE)


state 34

    9 ID_LIST: ID_LIST ',' ID .

    $default  reduce using rule 9 (ID_LIST)


state 35

   21 VALUES: TRUE .

    $default  reduce using rule 21 (VALUES)


state 36

   22 VALUES: FALSE .

    $default  reduce using rule 22 (VALUES)


state 37

   23 VALUES: STRINGV .

    $default  reduce using rule 23 (VALUES)


state 38

   20 VALUES: REALV .

    $default  reduce using rule 20 (VALUES)


state 39

   19 VALUES: INTEGERV .

    $default  reduce using rule 19 (VALUES)


state 40

   17 CONST_DECL: CONST ID EQ VALUES . ';'

    ';'  shift, and go to state 54


state 41

    7 VAR_DECL: VAR_DECL ID_LIST ':' ID_TYPE . ';'

    ';'  shift, and go to state 55


state 42

   18 CONST_DECL: CONST_DECL ID EQ VALUES . ';'

    ';'  shift, and go to state 56


state 43

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL BEG STMTS END . ID '.'

    ID  shift, and go to state 57


state 44

   42 STMTS: STMTS RETURN . ';'
   43      | STMTS RETURN . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    ';'       shift, and go to state 66
    '('       shift, and go to state 67

    EXPR  go to state 68


state 45

   46 STMTS: STMTS WHILE . '(' EXPR ')' DO STMTS END ';'

    '('  shift, and go to state 69


state 46

   44 STMTS: STMTS IF . '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS IF . '(' EXPR ')' THEN STMTS END ';'

    '('  shift, and go to state 70


state 47

   35 STMTS: STMTS ID . ASSIGN EXPR ';'
   36      | STMTS ID . EQ EXPR ';'
   37      | STMTS ID . '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS ID . '[' EXPR ']' EQ EXPR ';'
   47      | STMTS ID . '(' ARG_LIST ')' ';'
   48      | STMTS ID . ';'

    EQ      shift, and go to state 71
    ASSIGN  shift, and go to state 72
    ';'     shift, and go to state 73
    '['     shift, and go to state 74
    '('     shift, and go to state 75


state 48

   39 STMTS: STMTS PRINT . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 76


state 49

   40 STMTS: STMTS PRINTLN . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 77


state 50

   41 STMTS: STMTS READ . ID ';'

    ID  shift, and go to state 78


state 51

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID . FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';'

    '('  shift, and go to state 79

    $default  reduce using rule 28 (FUNC_ARGS)

    FUNC_ARGS  go to state 80


state 52

   10 ID_TYPE: ARRAY '[' . INTEGERV ',' INTEGERV ']' OF BASIC_TYPES

    INTEGERV  shift, and go to state 81


state 53

    6 VAR_DECL: VAR ID_LIST ':' ID_TYPE ';' .

    $default  reduce using rule 6 (VAR_DECL)


state 54

   17 CONST_DECL: CONST ID EQ VALUES ';' .

    $default  reduce using rule 17 (CONST_DECL)


state 55

    7 VAR_DECL: VAR_DECL ID_LIST ':' ID_TYPE ';' .

    $default  reduce using rule 7 (VAR_DECL)


state 56

   18 CONST_DECL: CONST_DECL ID EQ VALUES ';' .

    $default  reduce using rule 18 (CONST_DECL)


state 57

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL BEG STMTS END ID . '.'

    '.'  shift, and go to state 82


state 58

   72 EXPR: TRUE .

    $default  reduce using rule 72 (EXPR)


state 59

   73 EXPR: FALSE .

    $default  reduce using rule 73 (EXPR)


state 60

   74 EXPR: STRINGV .

    $default  reduce using rule 74 (EXPR)


state 61

   71 EXPR: REALV .

    $default  reduce using rule 71 (EXPR)


state 62

   70 EXPR: INTEGERV .

    $default  reduce using rule 70 (EXPR)


state 63

   67 EXPR: ID . '[' EXPR ']'
   68     | ID . '(' ARG_LIST ')'
   69     | ID .

    '['  shift, and go to state 83
    '('  shift, and go to state 84

    $default  reduce using rule 69 (EXPR)


state 64

   66 EXPR: NOTL . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 85


state 65

   57 EXPR: '-' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 86


state 66

   42 STMTS: STMTS RETURN ';' .

    $default  reduce using rule 42 (STMTS)


state 67

   51 EXPR: '(' . EXPR ')'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 87


state 68

   43 STMTS: STMTS RETURN EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 101


state 69

   46 STMTS: STMTS WHILE '(' . EXPR ')' DO STMTS END ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 102


state 70

   44 STMTS: STMTS IF '(' . EXPR ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS IF '(' . EXPR ')' THEN STMTS END ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 103


state 71

   36 STMTS: STMTS ID EQ . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 104


state 72

   35 STMTS: STMTS ID ASSIGN . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 105


state 73

   48 STMTS: STMTS ID ';' .

    $default  reduce using rule 48 (STMTS)


state 74

   37 STMTS: STMTS ID '[' . EXPR ']' ASSIGN EXPR ';'
   38      | STMTS ID '[' . EXPR ']' EQ EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 106


state 75

   47 STMTS: STMTS ID '(' . ARG_LIST ')' ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    ARG_LIST  go to state 107
    EXPR      go to state 108


state 76

   39 STMTS: STMTS PRINT EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 109


state 77

   40 STMTS: STMTS PRINTLN EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 110


state 78

   41 STMTS: STMTS READ ID . ';'

    ';'  shift, and go to state 111


state 79

   29 FUNC_ARGS: '(' . FUNC_VARS ')'

    ID  shift, and go to state 112

    FUNC_VARS  go to state 113


state 80

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS . FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';'

    ':'  shift, and go to state 114

    $default  reduce using rule 32 (FUNC_RET)

    FUNC_RET  go to state 115


state 81

   10 ID_TYPE: ARRAY '[' INTEGERV . ',' INTEGERV ']' OF BASIC_TYPES

    ','  shift, and go to state 116


state 82

    1 PROGRAM: MODULE ID VAR_CONST_DECL FUNC_DECL BEG STMTS END ID '.' .

    $default  reduce using rule 1 (PROGRAM)


state 83

   67 EXPR: ID '[' . EXPR ']'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 117


state 84

   68 EXPR: ID '(' . ARG_LIST ')'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    ARG_LIST  go to state 118
    EXPR      go to state 108


state 85

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR
   66     | NOTL EXPR .

    $default  reduce using rule 66 (EXPR)


state 86

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   57     | '-' EXPR .
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 57 (EXPR)


state 87

   51 EXPR: '(' EXPR . ')'
   52     | EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ')'   shift, and go to state 119


state 88

   58 EXPR: EXPR LT . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 120


state 89

   59 EXPR: EXPR LEQ . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 121


state 90

   62 EXPR: EXPR GT . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 122


state 91

   61 EXPR: EXPR GEQ . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 123


state 92

   60 EXPR: EXPR EQ . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 124


state 93

   63 EXPR: EXPR NEQ . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 125


state 94

   64 EXPR: EXPR ANDL . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 126


state 95

   65 EXPR: EXPR ORL . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 127


state 96

   52 EXPR: EXPR '+' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 128


state 97

   53 EXPR: EXPR '-' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 129


state 98

   54 EXPR: EXPR '*' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 130


state 99

   55 EXPR: EXPR '/' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 131


state 100

   56 EXPR: EXPR '%' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 132


state 101

   43 STMTS: STMTS RETURN EXPR ';' .

    $default  reduce using rule 43 (STMTS)


state 102

   46 STMTS: STMTS WHILE '(' EXPR . ')' DO STMTS END ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ')'   shift, and go to state 133


state 103

   44 STMTS: STMTS IF '(' EXPR . ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS IF '(' EXPR . ')' THEN STMTS END ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ')'   shift, and go to state 134


state 104

   36 STMTS: STMTS ID EQ EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 135


state 105

   35 STMTS: STMTS ID ASSIGN EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 136


state 106

   37 STMTS: STMTS ID '[' EXPR . ']' ASSIGN EXPR ';'
   38      | STMTS ID '[' EXPR . ']' EQ EXPR ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ']'   shift, and go to state 137


state 107

   47 STMTS: STMTS ID '(' ARG_LIST . ')' ';'
   50 ARG_LIST: ARG_LIST . ',' EXPR

    ','  shift, and go to state 138
    ')'  shift, and go to state 139


state 108

   49 ARG_LIST: EXPR .
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100

    $default  reduce using rule 49 (ARG_LIST)


state 109

   39 STMTS: STMTS PRINT EXPR ';' .

    $default  reduce using rule 39 (STMTS)


state 110

   40 STMTS: STMTS PRINTLN EXPR ';' .

    $default  reduce using rule 40 (STMTS)


state 111

   41 STMTS: STMTS READ ID ';' .

    $default  reduce using rule 41 (STMTS)


state 112

   30 FUNC_VARS: ID . ':' ID_TYPE

    ':'  shift, and go to state 140


state 113

   29 FUNC_ARGS: '(' FUNC_VARS . ')'
   31 FUNC_VARS: FUNC_VARS . ',' ID ':' ID_TYPE

    ','  shift, and go to state 141
    ')'  shift, and go to state 142


state 114

   33 FUNC_RET: ':' . ID_TYPE

    BOOLEAN  shift, and go to state 27
    REAL     shift, and go to state 28
    STRING   shift, and go to state 29
    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31

    ID_TYPE      go to state 143
    BASIC_TYPES  go to state 33


state 115

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET . @2 VAR_CONST_DECL BEG STMTS END ID ';'

    $default  reduce using rule 26 (@2)

    @2  go to state 144


state 116

   10 ID_TYPE: ARRAY '[' INTEGERV ',' . INTEGERV ']' OF BASIC_TYPES

    INTEGERV  shift, and go to state 145


state 117

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR
   67     | ID '[' EXPR . ']'

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ']'   shift, and go to state 146


state 118

   50 ARG_LIST: ARG_LIST . ',' EXPR
   68 EXPR: ID '(' ARG_LIST . ')'

    ','  shift, and go to state 138
    ')'  shift, and go to state 147


state 119

   51 EXPR: '(' EXPR ')' .

    $default  reduce using rule 51 (EXPR)


state 120

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   58     | EXPR LT EXPR .
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 58 (EXPR)


state 121

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   59     | EXPR LEQ EXPR .
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 59 (EXPR)


state 122

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   62     | EXPR GT EXPR .
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 62 (EXPR)


state 123

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   61     | EXPR GEQ EXPR .
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 61 (EXPR)


state 124

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   60     | EXPR EQ EXPR .
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 60 (EXPR)


state 125

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   63     | EXPR NEQ EXPR .
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 63 (EXPR)


state 126

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   64     | EXPR ANDL EXPR .
   65     | EXPR . ORL EXPR

    LT   shift, and go to state 88
    LEQ  shift, and go to state 89
    GT   shift, and go to state 90
    GEQ  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 64 (EXPR)


state 127

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR
   65     | EXPR ORL EXPR .

    LT   shift, and go to state 88
    LEQ  shift, and go to state 89
    GT   shift, and go to state 90
    GEQ  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 65 (EXPR)


state 128

   52 EXPR: EXPR . '+' EXPR
   52     | EXPR '+' EXPR .
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT   shift, and go to state 88
    LEQ  shift, and go to state 89
    GT   shift, and go to state 90
    GEQ  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 52 (EXPR)


state 129

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   53     | EXPR '-' EXPR .
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT   shift, and go to state 88
    LEQ  shift, and go to state 89
    GT   shift, and go to state 90
    GEQ  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 53 (EXPR)


state 130

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   54     | EXPR '*' EXPR .
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 54 (EXPR)


state 131

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   55     | EXPR '/' EXPR .
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 55 (EXPR)


state 132

   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   56     | EXPR '%' EXPR .
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    $default  reduce using rule 56 (EXPR)


state 133

   46 STMTS: STMTS WHILE '(' EXPR ')' . DO STMTS END ';'

    DO  shift, and go to state 148


state 134

   44 STMTS: STMTS IF '(' EXPR ')' . THEN STMTS ELSE STMTS END ';'
   45      | STMTS IF '(' EXPR ')' . THEN STMTS END ';'

    THEN  shift, and go to state 149


state 135

   36 STMTS: STMTS ID EQ EXPR ';' .

    $default  reduce using rule 36 (STMTS)


state 136

   35 STMTS: STMTS ID ASSIGN EXPR ';' .

    $default  reduce using rule 35 (STMTS)


state 137

   37 STMTS: STMTS ID '[' EXPR ']' . ASSIGN EXPR ';'
   38      | STMTS ID '[' EXPR ']' . EQ EXPR ';'

    EQ      shift, and go to state 150
    ASSIGN  shift, and go to state 151


state 138

   50 ARG_LIST: ARG_LIST ',' . EXPR

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 152


state 139

   47 STMTS: STMTS ID '(' ARG_LIST ')' . ';'

    ';'  shift, and go to state 153


state 140

   30 FUNC_VARS: ID ':' . ID_TYPE

    BOOLEAN  shift, and go to state 27
    REAL     shift, and go to state 28
    STRING   shift, and go to state 29
    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31

    ID_TYPE      go to state 154
    BASIC_TYPES  go to state 33


state 141

   31 FUNC_VARS: FUNC_VARS ',' . ID ':' ID_TYPE

    ID  shift, and go to state 155


state 142

   29 FUNC_ARGS: '(' FUNC_VARS ')' .

    $default  reduce using rule 29 (FUNC_ARGS)


state 143

   33 FUNC_RET: ':' ID_TYPE .

    $default  reduce using rule 33 (FUNC_RET)


state 144

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 . VAR_CONST_DECL BEG STMTS END ID ';'

    $default  reduce using rule 2 (VAR_CONST_DECL)

    VAR_CONST_DECL  go to state 156


state 145

   10 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV . ']' OF BASIC_TYPES

    ']'  shift, and go to state 157


state 146

   67 EXPR: ID '[' EXPR ']' .

    $default  reduce using rule 67 (EXPR)


state 147

   68 EXPR: ID '(' ARG_LIST ')' .

    $default  reduce using rule 68 (EXPR)


state 148

   46 STMTS: STMTS WHILE '(' EXPR ')' DO . STMTS END ';'

    $default  reduce using rule 34 (STMTS)

    STMTS  go to state 158


state 149

   44 STMTS: STMTS IF '(' EXPR ')' THEN . STMTS ELSE STMTS END ';'
   45      | STMTS IF '(' EXPR ')' THEN . STMTS END ';'

    $default  reduce using rule 34 (STMTS)

    STMTS  go to state 159


state 150

   38 STMTS: STMTS ID '[' EXPR ']' EQ . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 160


state 151

   37 STMTS: STMTS ID '[' EXPR ']' ASSIGN . EXPR ';'

    TRUE      shift, and go to state 58
    FALSE     shift, and go to state 59
    STRINGV   shift, and go to state 60
    REALV     shift, and go to state 61
    INTEGERV  shift, and go to state 62
    ID        shift, and go to state 63
    NOTL      shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 67

    EXPR  go to state 161


state 152

   50 ARG_LIST: ARG_LIST ',' EXPR .
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100

    $default  reduce using rule 50 (ARG_LIST)


state 153

   47 STMTS: STMTS ID '(' ARG_LIST ')' ';' .

    $default  reduce using rule 47 (STMTS)


state 154

   30 FUNC_VARS: ID ':' ID_TYPE .

    $default  reduce using rule 30 (FUNC_VARS)


state 155

   31 FUNC_VARS: FUNC_VARS ',' ID . ':' ID_TYPE

    ':'  shift, and go to state 162


state 156

    3 VAR_CONST_DECL: VAR_CONST_DECL . VAR_DECL
    4               | VAR_CONST_DECL . CONST_DECL
   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL . BEG STMTS END ID ';'

    BEG    shift, and go to state 163
    VAR    shift, and go to state 6
    CONST  shift, and go to state 7

    VAR_DECL    go to state 8
    CONST_DECL  go to state 9


state 157

   10 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' . OF BASIC_TYPES

    OF  shift, and go to state 164


state 158

   35 STMTS: STMTS . ID ASSIGN EXPR ';'
   36      | STMTS . ID EQ EXPR ';'
   37      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   39      | STMTS . PRINT EXPR ';'
   40      | STMTS . PRINTLN EXPR ';'
   41      | STMTS . READ ID ';'
   42      | STMTS . RETURN ';'
   43      | STMTS . RETURN EXPR ';'
   44      | STMTS . IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS . IF '(' EXPR ')' THEN STMTS END ';'
   46      | STMTS . WHILE '(' EXPR ')' DO STMTS END ';'
   46      | STMTS WHILE '(' EXPR ')' DO STMTS . END ';'
   47      | STMTS . ID '(' ARG_LIST ')' ';'
   48      | STMTS . ID ';'

    END      shift, and go to state 165
    RETURN   shift, and go to state 44
    WHILE    shift, and go to state 45
    IF       shift, and go to state 46
    ID       shift, and go to state 47
    PRINT    shift, and go to state 48
    PRINTLN  shift, and go to state 49
    READ     shift, and go to state 50


state 159

   35 STMTS: STMTS . ID ASSIGN EXPR ';'
   36      | STMTS . ID EQ EXPR ';'
   37      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   39      | STMTS . PRINT EXPR ';'
   40      | STMTS . PRINTLN EXPR ';'
   41      | STMTS . READ ID ';'
   42      | STMTS . RETURN ';'
   43      | STMTS . RETURN EXPR ';'
   44      | STMTS . IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   44      | STMTS IF '(' EXPR ')' THEN STMTS . ELSE STMTS END ';'
   45      | STMTS . IF '(' EXPR ')' THEN STMTS END ';'
   45      | STMTS IF '(' EXPR ')' THEN STMTS . END ';'
   46      | STMTS . WHILE '(' EXPR ')' DO STMTS END ';'
   47      | STMTS . ID '(' ARG_LIST ')' ';'
   48      | STMTS . ID ';'

    END      shift, and go to state 166
    RETURN   shift, and go to state 44
    WHILE    shift, and go to state 45
    IF       shift, and go to state 46
    ELSE     shift, and go to state 167
    ID       shift, and go to state 47
    PRINT    shift, and go to state 48
    PRINTLN  shift, and go to state 49
    READ     shift, and go to state 50


state 160

   38 STMTS: STMTS ID '[' EXPR ']' EQ EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 168


state 161

   37 STMTS: STMTS ID '[' EXPR ']' ASSIGN EXPR . ';'
   52 EXPR: EXPR . '+' EXPR
   53     | EXPR . '-' EXPR
   54     | EXPR . '*' EXPR
   55     | EXPR . '/' EXPR
   56     | EXPR . '%' EXPR
   58     | EXPR . LT EXPR
   59     | EXPR . LEQ EXPR
   60     | EXPR . EQ EXPR
   61     | EXPR . GEQ EXPR
   62     | EXPR . GT EXPR
   63     | EXPR . NEQ EXPR
   64     | EXPR . ANDL EXPR
   65     | EXPR . ORL EXPR

    LT    shift, and go to state 88
    LEQ   shift, and go to state 89
    GT    shift, and go to state 90
    GEQ   shift, and go to state 91
    EQ    shift, and go to state 92
    NEQ   shift, and go to state 93
    ANDL  shift, and go to state 94
    ORL   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '%'   shift, and go to state 100
    ';'   shift, and go to state 169


state 162

   31 FUNC_VARS: FUNC_VARS ',' ID ':' . ID_TYPE

    BOOLEAN  shift, and go to state 27
    REAL     shift, and go to state 28
    STRING   shift, and go to state 29
    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31

    ID_TYPE      go to state 170
    BASIC_TYPES  go to state 33


state 163

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG . STMTS END ID ';'

    $default  reduce using rule 34 (STMTS)

    STMTS  go to state 171


state 164

   10 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' OF . BASIC_TYPES

    BOOLEAN  shift, and go to state 27
    REAL     shift, and go to state 28
    STRING   shift, and go to state 29
    INTEGER  shift, and go to state 30

    BASIC_TYPES  go to state 172


state 165

   46 STMTS: STMTS WHILE '(' EXPR ')' DO STMTS END . ';'

    ';'  shift, and go to state 173


state 166

   45 STMTS: STMTS IF '(' EXPR ')' THEN STMTS END . ';'

    ';'  shift, and go to state 174


state 167

   44 STMTS: STMTS IF '(' EXPR ')' THEN STMTS ELSE . STMTS END ';'

    $default  reduce using rule 34 (STMTS)

    STMTS  go to state 175


state 168

   38 STMTS: STMTS ID '[' EXPR ']' EQ EXPR ';' .

    $default  reduce using rule 38 (STMTS)


state 169

   37 STMTS: STMTS ID '[' EXPR ']' ASSIGN EXPR ';' .

    $default  reduce using rule 37 (STMTS)


state 170

   31 FUNC_VARS: FUNC_VARS ',' ID ':' ID_TYPE .

    $default  reduce using rule 31 (FUNC_VARS)


state 171

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS . END ID ';'
   35 STMTS: STMTS . ID ASSIGN EXPR ';'
   36      | STMTS . ID EQ EXPR ';'
   37      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   39      | STMTS . PRINT EXPR ';'
   40      | STMTS . PRINTLN EXPR ';'
   41      | STMTS . READ ID ';'
   42      | STMTS . RETURN ';'
   43      | STMTS . RETURN EXPR ';'
   44      | STMTS . IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   45      | STMTS . IF '(' EXPR ')' THEN STMTS END ';'
   46      | STMTS . WHILE '(' EXPR ')' DO STMTS END ';'
   47      | STMTS . ID '(' ARG_LIST ')' ';'
   48      | STMTS . ID ';'

    END      shift, and go to state 176
    RETURN   shift, and go to state 44
    WHILE    shift, and go to state 45
    IF       shift, and go to state 46
    ID       shift, and go to state 47
    PRINT    shift, and go to state 48
    PRINTLN  shift, and go to state 49
    READ     shift, and go to state 50


state 172

   10 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' OF BASIC_TYPES .

    $default  reduce using rule 10 (ID_TYPE)


state 173

   46 STMTS: STMTS WHILE '(' EXPR ')' DO STMTS END ';' .

    $default  reduce using rule 46 (STMTS)


state 174

   45 STMTS: STMTS IF '(' EXPR ')' THEN STMTS END ';' .

    $default  reduce using rule 45 (STMTS)


state 175

   35 STMTS: STMTS . ID ASSIGN EXPR ';'
   36      | STMTS . ID EQ EXPR ';'
   37      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   38      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   39      | STMTS . PRINT EXPR ';'
   40      | STMTS . PRINTLN EXPR ';'
   41      | STMTS . READ ID ';'
   42      | STMTS . RETURN ';'
   43      | STMTS . RETURN EXPR ';'
   44      | STMTS . IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';'
   44      | STMTS IF '(' EXPR ')' THEN STMTS ELSE STMTS . END ';'
   45      | STMTS . IF '(' EXPR ')' THEN STMTS END ';'
   46      | STMTS . WHILE '(' EXPR ')' DO STMTS END ';'
   47      | STMTS . ID '(' ARG_LIST ')' ';'
   48      | STMTS . ID ';'

    END      shift, and go to state 177
    RETURN   shift, and go to state 44
    WHILE    shift, and go to state 45
    IF       shift, and go to state 46
    ID       shift, and go to state 47
    PRINT    shift, and go to state 48
    PRINTLN  shift, and go to state 49
    READ     shift, and go to state 50


state 176

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END . ID ';'

    ID  shift, and go to state 178


state 177

   44 STMTS: STMTS IF '(' EXPR ')' THEN STMTS ELSE STMTS END . ';'

    ';'  shift, and go to state 179


state 178

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID . ';'

    ';'  shift, and go to state 180


state 179

   44 STMTS: STMTS IF '(' EXPR ')' THEN STMTS ELSE STMTS END ';' .

    $default  reduce using rule 44 (STMTS)


state 180

   27 FUNC_DECL: FUNC_DECL @1 PROCEDURE ID FUNC_ARGS FUNC_RET @2 VAR_CONST_DECL BEG STMTS END ID ';' .

    $default  reduce using rule 27 (FUNC_DECL)
