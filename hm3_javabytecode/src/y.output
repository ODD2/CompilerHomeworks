Terminals which are not used

   EXIT
   LOOP
   REPEAT
   FOR
   CONTINUE
   BREAK
   CASE
   RECORD
   TYPE
   USE
   CHAR
   INTID
   REALID
   BOOLID
   STRID
   FUNCID
   UTIL
   FN
   IN


State 58 conflicts: 2 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce, 1 reduce/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce, 1 reduce/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce
State 167 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 @1: /* empty */

    2 @2: /* empty */

    3 @3: /* empty */

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 ID '.'

    5 VAR_CONST_DECL: /* empty */
    6               | VAR_DECL
    7               | CONST_DECL
    8               | CONST_DECL VAR_DECL
    9               | VAR_DECL CONST_DECL

   10 VAR_DECL: VAR ';'
   11         | VAR ID_LIST ':' ID_TYPE ';'
   12         | VAR_DECL ID_LIST ':' ID_TYPE ';'

   13 ID_LIST: ID
   14        | ID_LIST ',' ID

   15 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' OF BASIC_TYPES
   16        | BASIC_TYPES

   17 BASIC_TYPES: BOOLEAN
   18            | INTEGER
   19            | REAL
   20            | STRING

   21 CONST_DECL: CONST ';'
   22           | CONST ID EQ VALUES ';'
   23           | CONST_DECL ID EQ VALUES ';'

   24 VALUES: INTEGERV
   25       | REALV
   26       | TRUE
   27       | FALSE
   28       | STRINGV

   29 FUNC_DECL: /* empty */

   30 @4: /* empty */

   31 @5: /* empty */

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';'

   33 FUNC_ARGS: /* empty */
   34          | '(' FUNC_VARS ')'

   35 FUNC_VARS: /* empty */
   36          | FUNC_VARS_LIST

   37 FUNC_VARS_LIST: ID ':' ID_TYPE
   38               | FUNC_VARS ',' ID ':' ID_TYPE

   39 FUNC_RET: /* empty */
   40         | ':' ID_TYPE

   41 ASSIGN_SYMBOL: ASSIGN
   42              | EQ

   43 IF_PREACT: /* empty */

   44 STMTS: /* empty */
   45      | ';'
   46      | STMTS ID ASSIGN_SYMBOL EXPR ';'
   47      | STMTS ID '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS ID '[' EXPR ']' EQ EXPR ';'

   49 @6: /* empty */

   50 STMTS: STMTS PRINT @6 EXPR ';'

   51 @7: /* empty */

   52 STMTS: STMTS PRINTLN @7 EXPR ';'
   53      | STMTS READ ID ';'
   54      | STMTS RETURN ';'
   55      | STMTS RETURN EXPR ';'

   56 @8: /* empty */

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS END ';'

   59 @9: /* empty */

   60 @10: /* empty */

   61 STMTS: STMTS WHILE @9 '(' EXPR ')' @10 DO STMTS END ';'
   62      | STMTS ID '(' ARGS ')' ';'
   63      | STMTS ID ';'

   64 ARGS: /* empty */
   65     | ARG_LIST

   66 ARG_LIST: EXPR
   67         | ARG_LIST ',' EXPR

   68 EXPR: /* empty */
   69     | '(' EXPR ')'
   70     | EXPR '+' EXPR
   71     | EXPR '-' EXPR
   72     | EXPR '*' EXPR
   73     | EXPR '/' EXPR
   74     | EXPR '%' EXPR
   75     | '-' EXPR
   76     | EXPR LT EXPR
   77     | EXPR LEQ EXPR
   78     | EXPR EQ EXPR
   79     | EXPR GEQ EXPR
   80     | EXPR GT EXPR
   81     | EXPR NEQ EXPR
   82     | EXPR ANDL EXPR
   83     | EXPR ORL EXPR
   84     | NOTL EXPR
   85     | ID '[' EXPR ']'
   86     | ID '(' ARGS ')'
   87     | ID
   88     | INTEGERV
   89     | REALV
   90     | TRUE
   91     | FALSE
   92     | STRINGV


Terminals, with rules where they appear

$end (0) 0
'%' (37) 74
'(' (40) 34 57 58 61 62 69 86
')' (41) 34 57 58 61 62 69 86
'*' (42) 72
'+' (43) 70
',' (44) 14 15 38 67
'-' (45) 71 75
'.' (46) 4
'/' (47) 73
':' (58) 11 12 37 38 40
';' (59) 10 11 12 21 22 23 32 45 46 47 48 50 52 53 54 55 57 58 61 62
    63
'[' (91) 15 47 48 85
']' (93) 15 47 48 85
error (256)
MODULE (258) 4
PROCEDURE (259) 32
BEG (260) 4 32
END (261) 4 32 57 58 61
EXIT (262)
RETURN (263) 54 55
DO (264) 61
LOOP (265)
WHILE (266) 61
REPEAT (267)
FOR (268)
CONTINUE (269)
BREAK (270)
CASE (271)
IF (272) 57 58
THEN (273) 57 58
ELSE (274) 57
RECORD (275)
TYPE (276)
USE (277)
VAR (278) 10 11
BOOLEAN (279) 17
CHAR (280)
CONST (281) 21 22
REAL (282) 19
STRING (283) 20
INTEGER (284) 18
ARRAY (285) 15
OF (286) 15
TRUE (287) 26 90
FALSE (288) 27 91
STRINGV (289) 28 92
REALV (290) 25 89
INTEGERV (291) 15 24 88
ID (292) 4 13 14 22 23 32 37 38 46 47 48 53 62 63 85 86 87
INTID (293)
REALID (294)
BOOLID (295)
STRID (296)
FUNCID (297)
LT (298) 76
LEQ (299) 77
GT (300) 80
GEQ (301) 79
EQ (302) 22 23 42 48 78
NEQ (303) 81
ANDL (304) 82
ORL (305) 83
NOTL (306) 84
ASSIGN (307) 41 47
PRINT (308) 50
PRINTLN (309) 52
UTIL (310)
FN (311)
IN (312)
READ (313) 53
UNARY (314)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
PROGRAM (74)
    on left: 4, on right: 0
@1 (75)
    on left: 1, on right: 4
@2 (76)
    on left: 2, on right: 4
@3 (77)
    on left: 3, on right: 4
VAR_CONST_DECL (78)
    on left: 5 6 7 8 9, on right: 4 32
VAR_DECL (79)
    on left: 10 11 12, on right: 6 8 9 12
ID_LIST (80)
    on left: 13 14, on right: 11 12 14
ID_TYPE (81)
    on left: 15 16, on right: 11 12 37 38 40
BASIC_TYPES (82)
    on left: 17 18 19 20, on right: 15 16
CONST_DECL (83)
    on left: 21 22 23, on right: 7 8 9 23
VALUES (84)
    on left: 24 25 26 27 28, on right: 22 23
FUNC_DECL (85)
    on left: 29 32, on right: 4 32
@4 (86)
    on left: 30, on right: 32
@5 (87)
    on left: 31, on right: 32
FUNC_ARGS (88)
    on left: 33 34, on right: 32
FUNC_VARS (89)
    on left: 35 36, on right: 34 38
FUNC_VARS_LIST (90)
    on left: 37 38, on right: 36
FUNC_RET (91)
    on left: 39 40, on right: 32
ASSIGN_SYMBOL (92)
    on left: 41 42, on right: 46
IF_PREACT (93)
    on left: 43, on right: 57 58
STMTS (94)
    on left: 44 45 46 47 48 50 52 53 54 55 57 58 61 62 63,
    on right: 4 32 46 47 48 50 52 53 54 55 57 58 61 62 63
@6 (95)
    on left: 49, on right: 50
@7 (96)
    on left: 51, on right: 52
@8 (97)
    on left: 56, on right: 57
@9 (98)
    on left: 59, on right: 61
@10 (99)
    on left: 60, on right: 61
ARGS (100)
    on left: 64 65, on right: 62 86
ARG_LIST (101)
    on left: 66 67, on right: 65 67
EXPR (102)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 90 91 92, on right: 46 47 48 50 52 55 57 58 61 66 67
    69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85


state 0

    0 $accept: . PROGRAM $end

    MODULE  shift, and go to state 1

    PROGRAM  go to state 2


state 1

    4 PROGRAM: MODULE . ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 ID '.'

    ID  shift, and go to state 3


state 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


state 3

    4 PROGRAM: MODULE ID . @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 ID '.'

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: PROGRAM $end .

    $default  accept


state 5

    4 PROGRAM: MODULE ID @1 . VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 ID '.'

    VAR    shift, and go to state 6
    CONST  shift, and go to state 7

    $default  reduce using rule 5 (VAR_CONST_DECL)

    VAR_CONST_DECL  go to state 8
    VAR_DECL        go to state 9
    CONST_DECL      go to state 10


state 6

   10 VAR_DECL: VAR . ';'
   11         | VAR . ID_LIST ':' ID_TYPE ';'

    ID   shift, and go to state 11
    ';'  shift, and go to state 12

    ID_LIST  go to state 13


state 7

   21 CONST_DECL: CONST . ';'
   22           | CONST . ID EQ VALUES ';'

    ID   shift, and go to state 14
    ';'  shift, and go to state 15


state 8

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL . FUNC_DECL BEG @2 STMTS END @3 ID '.'

    $default  reduce using rule 29 (FUNC_DECL)

    FUNC_DECL  go to state 16


state 9

    6 VAR_CONST_DECL: VAR_DECL .
    9               | VAR_DECL . CONST_DECL
   12 VAR_DECL: VAR_DECL . ID_LIST ':' ID_TYPE ';'

    CONST  shift, and go to state 7
    ID     shift, and go to state 11

    $default  reduce using rule 6 (VAR_CONST_DECL)

    ID_LIST     go to state 17
    CONST_DECL  go to state 18


state 10

    7 VAR_CONST_DECL: CONST_DECL .
    8               | CONST_DECL . VAR_DECL
   23 CONST_DECL: CONST_DECL . ID EQ VALUES ';'

    VAR  shift, and go to state 6
    ID   shift, and go to state 19

    $default  reduce using rule 7 (VAR_CONST_DECL)

    VAR_DECL  go to state 20


state 11

   13 ID_LIST: ID .

    $default  reduce using rule 13 (ID_LIST)


state 12

   10 VAR_DECL: VAR ';' .

    $default  reduce using rule 10 (VAR_DECL)


state 13

   11 VAR_DECL: VAR ID_LIST . ':' ID_TYPE ';'
   14 ID_LIST: ID_LIST . ',' ID

    ':'  shift, and go to state 21
    ','  shift, and go to state 22


state 14

   22 CONST_DECL: CONST ID . EQ VALUES ';'

    EQ  shift, and go to state 23


state 15

   21 CONST_DECL: CONST ';' .

    $default  reduce using rule 21 (CONST_DECL)


state 16

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL . BEG @2 STMTS END @3 ID '.'
   32 FUNC_DECL: FUNC_DECL . PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';'

    PROCEDURE  shift, and go to state 24
    BEG        shift, and go to state 25


state 17

   12 VAR_DECL: VAR_DECL ID_LIST . ':' ID_TYPE ';'
   14 ID_LIST: ID_LIST . ',' ID

    ':'  shift, and go to state 26
    ','  shift, and go to state 22


state 18

    9 VAR_CONST_DECL: VAR_DECL CONST_DECL .
   23 CONST_DECL: CONST_DECL . ID EQ VALUES ';'

    ID  shift, and go to state 19

    $default  reduce using rule 9 (VAR_CONST_DECL)


state 19

   23 CONST_DECL: CONST_DECL ID . EQ VALUES ';'

    EQ  shift, and go to state 27


state 20

    8 VAR_CONST_DECL: CONST_DECL VAR_DECL .
   12 VAR_DECL: VAR_DECL . ID_LIST ':' ID_TYPE ';'

    ID  shift, and go to state 11

    $default  reduce using rule 8 (VAR_CONST_DECL)

    ID_LIST  go to state 17


state 21

   11 VAR_DECL: VAR ID_LIST ':' . ID_TYPE ';'

    BOOLEAN  shift, and go to state 28
    REAL     shift, and go to state 29
    STRING   shift, and go to state 30
    INTEGER  shift, and go to state 31
    ARRAY    shift, and go to state 32

    ID_TYPE      go to state 33
    BASIC_TYPES  go to state 34


state 22

   14 ID_LIST: ID_LIST ',' . ID

    ID  shift, and go to state 35


state 23

   22 CONST_DECL: CONST ID EQ . VALUES ';'

    TRUE      shift, and go to state 36
    FALSE     shift, and go to state 37
    STRINGV   shift, and go to state 38
    REALV     shift, and go to state 39
    INTEGERV  shift, and go to state 40

    VALUES  go to state 41


state 24

   32 FUNC_DECL: FUNC_DECL PROCEDURE . ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';'

    ID  shift, and go to state 42


state 25

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG . @2 STMTS END @3 ID '.'

    $default  reduce using rule 2 (@2)

    @2  go to state 43


state 26

   12 VAR_DECL: VAR_DECL ID_LIST ':' . ID_TYPE ';'

    BOOLEAN  shift, and go to state 28
    REAL     shift, and go to state 29
    STRING   shift, and go to state 30
    INTEGER  shift, and go to state 31
    ARRAY    shift, and go to state 32

    ID_TYPE      go to state 44
    BASIC_TYPES  go to state 34


state 27

   23 CONST_DECL: CONST_DECL ID EQ . VALUES ';'

    TRUE      shift, and go to state 36
    FALSE     shift, and go to state 37
    STRINGV   shift, and go to state 38
    REALV     shift, and go to state 39
    INTEGERV  shift, and go to state 40

    VALUES  go to state 45


state 28

   17 BASIC_TYPES: BOOLEAN .

    $default  reduce using rule 17 (BASIC_TYPES)


state 29

   19 BASIC_TYPES: REAL .

    $default  reduce using rule 19 (BASIC_TYPES)


state 30

   20 BASIC_TYPES: STRING .

    $default  reduce using rule 20 (BASIC_TYPES)


state 31

   18 BASIC_TYPES: INTEGER .

    $default  reduce using rule 18 (BASIC_TYPES)


state 32

   15 ID_TYPE: ARRAY . '[' INTEGERV ',' INTEGERV ']' OF BASIC_TYPES

    '['  shift, and go to state 46


state 33

   11 VAR_DECL: VAR ID_LIST ':' ID_TYPE . ';'

    ';'  shift, and go to state 47


state 34

   16 ID_TYPE: BASIC_TYPES .

    $default  reduce using rule 16 (ID_TYPE)


state 35

   14 ID_LIST: ID_LIST ',' ID .

    $default  reduce using rule 14 (ID_LIST)


state 36

   26 VALUES: TRUE .

    $default  reduce using rule 26 (VALUES)


state 37

   27 VALUES: FALSE .

    $default  reduce using rule 27 (VALUES)


state 38

   28 VALUES: STRINGV .

    $default  reduce using rule 28 (VALUES)


state 39

   25 VALUES: REALV .

    $default  reduce using rule 25 (VALUES)


state 40

   24 VALUES: INTEGERV .

    $default  reduce using rule 24 (VALUES)


state 41

   22 CONST_DECL: CONST ID EQ VALUES . ';'

    ';'  shift, and go to state 48


state 42

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID . @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';'

    $default  reduce using rule 30 (@4)

    @4  go to state 49


state 43

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 . STMTS END @3 ID '.'

    ';'  shift, and go to state 50

    $default  reduce using rule 44 (STMTS)

    STMTS  go to state 51


state 44

   12 VAR_DECL: VAR_DECL ID_LIST ':' ID_TYPE . ';'

    ';'  shift, and go to state 52


state 45

   23 CONST_DECL: CONST_DECL ID EQ VALUES . ';'

    ';'  shift, and go to state 53


state 46

   15 ID_TYPE: ARRAY '[' . INTEGERV ',' INTEGERV ']' OF BASIC_TYPES

    INTEGERV  shift, and go to state 54


state 47

   11 VAR_DECL: VAR ID_LIST ':' ID_TYPE ';' .

    $default  reduce using rule 11 (VAR_DECL)


state 48

   22 CONST_DECL: CONST ID EQ VALUES ';' .

    $default  reduce using rule 22 (CONST_DECL)


state 49

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 . FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';'

    '('  shift, and go to state 55

    $default  reduce using rule 33 (FUNC_ARGS)

    FUNC_ARGS  go to state 56


state 50

   45 STMTS: ';' .

    $default  reduce using rule 45 (STMTS)


state 51

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS . END @3 ID '.'
   46 STMTS: STMTS . ID ASSIGN_SYMBOL EXPR ';'
   47      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   50      | STMTS . PRINT @6 EXPR ';'
   52      | STMTS . PRINTLN @7 EXPR ';'
   53      | STMTS . READ ID ';'
   54      | STMTS . RETURN ';'
   55      | STMTS . RETURN EXPR ';'
   57      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS END ';'
   61      | STMTS . WHILE @9 '(' EXPR ')' @10 DO STMTS END ';'
   62      | STMTS . ID '(' ARGS ')' ';'
   63      | STMTS . ID ';'

    END      shift, and go to state 57
    RETURN   shift, and go to state 58
    WHILE    shift, and go to state 59
    IF       shift, and go to state 60
    ID       shift, and go to state 61
    PRINT    shift, and go to state 62
    PRINTLN  shift, and go to state 63
    READ     shift, and go to state 64


state 52

   12 VAR_DECL: VAR_DECL ID_LIST ':' ID_TYPE ';' .

    $default  reduce using rule 12 (VAR_DECL)


state 53

   23 CONST_DECL: CONST_DECL ID EQ VALUES ';' .

    $default  reduce using rule 23 (CONST_DECL)


state 54

   15 ID_TYPE: ARRAY '[' INTEGERV . ',' INTEGERV ']' OF BASIC_TYPES

    ','  shift, and go to state 65


state 55

   34 FUNC_ARGS: '(' . FUNC_VARS ')'

    ID  shift, and go to state 66

    $default  reduce using rule 35 (FUNC_VARS)

    FUNC_VARS       go to state 67
    FUNC_VARS_LIST  go to state 68


state 56

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS . FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';'

    ':'  shift, and go to state 69

    $default  reduce using rule 39 (FUNC_RET)

    FUNC_RET  go to state 70


state 57

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END . @3 ID '.'

    $default  reduce using rule 3 (@3)

    @3  go to state 71


state 58

   54 STMTS: STMTS RETURN . ';'
   55      | STMTS RETURN . EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    ';'       shift, and go to state 80
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    ';'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 82


state 59

   61 STMTS: STMTS WHILE . @9 '(' EXPR ')' @10 DO STMTS END ';'

    $default  reduce using rule 59 (@9)

    @9  go to state 83


state 60

   57 STMTS: STMTS IF . '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF . '(' EXPR ')' IF_PREACT THEN STMTS END ';'

    '('  shift, and go to state 84


state 61

   46 STMTS: STMTS ID . ASSIGN_SYMBOL EXPR ';'
   47      | STMTS ID . '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS ID . '[' EXPR ']' EQ EXPR ';'
   62      | STMTS ID . '(' ARGS ')' ';'
   63      | STMTS ID . ';'

    EQ      shift, and go to state 85
    ASSIGN  shift, and go to state 86
    ';'     shift, and go to state 87
    '['     shift, and go to state 88
    '('     shift, and go to state 89

    ASSIGN_SYMBOL  go to state 90


state 62

   50 STMTS: STMTS PRINT . @6 EXPR ';'

    $default  reduce using rule 49 (@6)

    @6  go to state 91


state 63

   52 STMTS: STMTS PRINTLN . @7 EXPR ';'

    $default  reduce using rule 51 (@7)

    @7  go to state 92


state 64

   53 STMTS: STMTS READ . ID ';'

    ID  shift, and go to state 93


state 65

   15 ID_TYPE: ARRAY '[' INTEGERV ',' . INTEGERV ']' OF BASIC_TYPES

    INTEGERV  shift, and go to state 94


state 66

   37 FUNC_VARS_LIST: ID . ':' ID_TYPE

    ':'  shift, and go to state 95


state 67

   34 FUNC_ARGS: '(' FUNC_VARS . ')'
   38 FUNC_VARS_LIST: FUNC_VARS . ',' ID ':' ID_TYPE

    ','  shift, and go to state 96
    ')'  shift, and go to state 97


state 68

   36 FUNC_VARS: FUNC_VARS_LIST .

    $default  reduce using rule 36 (FUNC_VARS)


state 69

   40 FUNC_RET: ':' . ID_TYPE

    BOOLEAN  shift, and go to state 28
    REAL     shift, and go to state 29
    STRING   shift, and go to state 30
    INTEGER  shift, and go to state 31
    ARRAY    shift, and go to state 32

    ID_TYPE      go to state 98
    BASIC_TYPES  go to state 34


state 70

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET . @5 VAR_CONST_DECL BEG STMTS END ID ';'

    $default  reduce using rule 31 (@5)

    @5  go to state 99


state 71

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 . ID '.'

    ID  shift, and go to state 100


state 72

   90 EXPR: TRUE .

    $default  reduce using rule 90 (EXPR)


state 73

   91 EXPR: FALSE .

    $default  reduce using rule 91 (EXPR)


state 74

   92 EXPR: STRINGV .

    $default  reduce using rule 92 (EXPR)


state 75

   89 EXPR: REALV .

    $default  reduce using rule 89 (EXPR)


state 76

   88 EXPR: INTEGERV .

    $default  reduce using rule 88 (EXPR)


state 77

   85 EXPR: ID . '[' EXPR ']'
   86     | ID . '(' ARGS ')'
   87     | ID .

    '['  shift, and go to state 101
    '('  shift, and go to state 102

    $default  reduce using rule 87 (EXPR)


state 78

   84 EXPR: NOTL . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 103


state 79

   75 EXPR: '-' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 104


state 80

   54 STMTS: STMTS RETURN ';' .

    $default  reduce using rule 54 (STMTS)


state 81

   69 EXPR: '(' . EXPR ')'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 105


state 82

   55 STMTS: STMTS RETURN EXPR . ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ';'   shift, and go to state 119


state 83

   61 STMTS: STMTS WHILE @9 . '(' EXPR ')' @10 DO STMTS END ';'

    '('  shift, and go to state 120


state 84

   57 STMTS: STMTS IF '(' . EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF '(' . EXPR ')' IF_PREACT THEN STMTS END ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 121


state 85

   42 ASSIGN_SYMBOL: EQ .

    $default  reduce using rule 42 (ASSIGN_SYMBOL)


state 86

   41 ASSIGN_SYMBOL: ASSIGN .

    $default  reduce using rule 41 (ASSIGN_SYMBOL)


state 87

   63 STMTS: STMTS ID ';' .

    $default  reduce using rule 63 (STMTS)


state 88

   47 STMTS: STMTS ID '[' . EXPR ']' ASSIGN EXPR ';'
   48      | STMTS ID '[' . EXPR ']' EQ EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 122


state 89

   62 STMTS: STMTS ID '(' . ARGS ')' ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    ')'       reduce using rule 64 (ARGS)
    ')'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    ARGS      go to state 123
    ARG_LIST  go to state 124
    EXPR      go to state 125


state 90

   46 STMTS: STMTS ID ASSIGN_SYMBOL . EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 126


state 91

   50 STMTS: STMTS PRINT @6 . EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 127


state 92

   52 STMTS: STMTS PRINTLN @7 . EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 128


state 93

   53 STMTS: STMTS READ ID . ';'

    ';'  shift, and go to state 129


state 94

   15 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV . ']' OF BASIC_TYPES

    ']'  shift, and go to state 130


state 95

   37 FUNC_VARS_LIST: ID ':' . ID_TYPE

    BOOLEAN  shift, and go to state 28
    REAL     shift, and go to state 29
    STRING   shift, and go to state 30
    INTEGER  shift, and go to state 31
    ARRAY    shift, and go to state 32

    ID_TYPE      go to state 131
    BASIC_TYPES  go to state 34


state 96

   38 FUNC_VARS_LIST: FUNC_VARS ',' . ID ':' ID_TYPE

    ID  shift, and go to state 132


state 97

   34 FUNC_ARGS: '(' FUNC_VARS ')' .

    $default  reduce using rule 34 (FUNC_ARGS)


state 98

   40 FUNC_RET: ':' ID_TYPE .

    $default  reduce using rule 40 (FUNC_RET)


state 99

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 . VAR_CONST_DECL BEG STMTS END ID ';'

    VAR    shift, and go to state 6
    CONST  shift, and go to state 7

    $default  reduce using rule 5 (VAR_CONST_DECL)

    VAR_CONST_DECL  go to state 133
    VAR_DECL        go to state 9
    CONST_DECL      go to state 10


state 100

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 ID . '.'

    '.'  shift, and go to state 134


state 101

   85 EXPR: ID '[' . EXPR ']'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 135


state 102

   86 EXPR: ID '(' . ARGS ')'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    ')'       reduce using rule 64 (ARGS)
    ')'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    ARGS      go to state 136
    ARG_LIST  go to state 124
    EXPR      go to state 125


state 103

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR
   84     | NOTL EXPR .

    $default  reduce using rule 84 (EXPR)


state 104

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   75     | '-' EXPR .
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 75 (EXPR)


state 105

   69 EXPR: '(' EXPR . ')'
   70     | EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ')'   shift, and go to state 137


state 106

   76 EXPR: EXPR LT . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 138


state 107

   77 EXPR: EXPR LEQ . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 139


state 108

   80 EXPR: EXPR GT . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 140


state 109

   79 EXPR: EXPR GEQ . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 141


state 110

   78 EXPR: EXPR EQ . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 142


state 111

   81 EXPR: EXPR NEQ . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 143


state 112

   82 EXPR: EXPR ANDL . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 144


state 113

   83 EXPR: EXPR ORL . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 145


state 114

   70 EXPR: EXPR '+' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 146


state 115

   71 EXPR: EXPR '-' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 147


state 116

   72 EXPR: EXPR '*' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 148


state 117

   73 EXPR: EXPR '/' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 149


state 118

   74 EXPR: EXPR '%' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 150


state 119

   55 STMTS: STMTS RETURN EXPR ';' .

    $default  reduce using rule 55 (STMTS)


state 120

   61 STMTS: STMTS WHILE @9 '(' . EXPR ')' @10 DO STMTS END ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 151


state 121

   57 STMTS: STMTS IF '(' EXPR . ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF '(' EXPR . ')' IF_PREACT THEN STMTS END ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ')'   shift, and go to state 152


state 122

   47 STMTS: STMTS ID '[' EXPR . ']' ASSIGN EXPR ';'
   48      | STMTS ID '[' EXPR . ']' EQ EXPR ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ']'   shift, and go to state 153


state 123

   62 STMTS: STMTS ID '(' ARGS . ')' ';'

    ')'  shift, and go to state 154


state 124

   65 ARGS: ARG_LIST .
   67 ARG_LIST: ARG_LIST . ',' EXPR

    ','  shift, and go to state 155

    $default  reduce using rule 65 (ARGS)


state 125

   66 ARG_LIST: EXPR .
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118

    $default  reduce using rule 66 (ARG_LIST)


state 126

   46 STMTS: STMTS ID ASSIGN_SYMBOL EXPR . ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ';'   shift, and go to state 156


state 127

   50 STMTS: STMTS PRINT @6 EXPR . ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ';'   shift, and go to state 157


state 128

   52 STMTS: STMTS PRINTLN @7 EXPR . ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ';'   shift, and go to state 158


state 129

   53 STMTS: STMTS READ ID ';' .

    $default  reduce using rule 53 (STMTS)


state 130

   15 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' . OF BASIC_TYPES

    OF  shift, and go to state 159


state 131

   37 FUNC_VARS_LIST: ID ':' ID_TYPE .

    $default  reduce using rule 37 (FUNC_VARS_LIST)


state 132

   38 FUNC_VARS_LIST: FUNC_VARS ',' ID . ':' ID_TYPE

    ':'  shift, and go to state 160


state 133

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL . BEG STMTS END ID ';'

    BEG  shift, and go to state 161


state 134

    4 PROGRAM: MODULE ID @1 VAR_CONST_DECL FUNC_DECL BEG @2 STMTS END @3 ID '.' .

    $default  reduce using rule 4 (PROGRAM)


state 135

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR
   85     | ID '[' EXPR . ']'

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ']'   shift, and go to state 162


state 136

   86 EXPR: ID '(' ARGS . ')'

    ')'  shift, and go to state 163


state 137

   69 EXPR: '(' EXPR ')' .

    $default  reduce using rule 69 (EXPR)


state 138

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   76     | EXPR LT EXPR .
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 76 (EXPR)


state 139

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   77     | EXPR LEQ EXPR .
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 77 (EXPR)


state 140

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   80     | EXPR GT EXPR .
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 80 (EXPR)


state 141

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   79     | EXPR GEQ EXPR .
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 79 (EXPR)


state 142

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   78     | EXPR EQ EXPR .
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 78 (EXPR)


state 143

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   81     | EXPR NEQ EXPR .
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 81 (EXPR)


state 144

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   82     | EXPR ANDL EXPR .
   83     | EXPR . ORL EXPR

    LT   shift, and go to state 106
    LEQ  shift, and go to state 107
    GT   shift, and go to state 108
    GEQ  shift, and go to state 109
    EQ   shift, and go to state 110
    NEQ  shift, and go to state 111
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115
    '*'  shift, and go to state 116
    '/'  shift, and go to state 117
    '%'  shift, and go to state 118

    $default  reduce using rule 82 (EXPR)


state 145

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR
   83     | EXPR ORL EXPR .

    LT   shift, and go to state 106
    LEQ  shift, and go to state 107
    GT   shift, and go to state 108
    GEQ  shift, and go to state 109
    EQ   shift, and go to state 110
    NEQ  shift, and go to state 111
    '+'  shift, and go to state 114
    '-'  shift, and go to state 115
    '*'  shift, and go to state 116
    '/'  shift, and go to state 117
    '%'  shift, and go to state 118

    $default  reduce using rule 83 (EXPR)


state 146

   70 EXPR: EXPR . '+' EXPR
   70     | EXPR '+' EXPR .
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT   shift, and go to state 106
    LEQ  shift, and go to state 107
    GT   shift, and go to state 108
    GEQ  shift, and go to state 109
    EQ   shift, and go to state 110
    NEQ  shift, and go to state 111
    '*'  shift, and go to state 116
    '/'  shift, and go to state 117
    '%'  shift, and go to state 118

    $default  reduce using rule 70 (EXPR)


state 147

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   71     | EXPR '-' EXPR .
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT   shift, and go to state 106
    LEQ  shift, and go to state 107
    GT   shift, and go to state 108
    GEQ  shift, and go to state 109
    EQ   shift, and go to state 110
    NEQ  shift, and go to state 111
    '*'  shift, and go to state 116
    '/'  shift, and go to state 117
    '%'  shift, and go to state 118

    $default  reduce using rule 71 (EXPR)


state 148

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   72     | EXPR '*' EXPR .
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 72 (EXPR)


state 149

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   73     | EXPR '/' EXPR .
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 73 (EXPR)


state 150

   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   74     | EXPR '%' EXPR .
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    $default  reduce using rule 74 (EXPR)


state 151

   61 STMTS: STMTS WHILE @9 '(' EXPR . ')' @10 DO STMTS END ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ')'   shift, and go to state 164


state 152

   57 STMTS: STMTS IF '(' EXPR ')' . IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF '(' EXPR ')' . IF_PREACT THEN STMTS END ';'

    $default  reduce using rule 43 (IF_PREACT)

    IF_PREACT  go to state 165


state 153

   47 STMTS: STMTS ID '[' EXPR ']' . ASSIGN EXPR ';'
   48      | STMTS ID '[' EXPR ']' . EQ EXPR ';'

    EQ      shift, and go to state 166
    ASSIGN  shift, and go to state 167


state 154

   62 STMTS: STMTS ID '(' ARGS ')' . ';'

    ';'  shift, and go to state 168


state 155

   67 ARG_LIST: ARG_LIST ',' . EXPR

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 169


state 156

   46 STMTS: STMTS ID ASSIGN_SYMBOL EXPR ';' .

    $default  reduce using rule 46 (STMTS)


state 157

   50 STMTS: STMTS PRINT @6 EXPR ';' .

    $default  reduce using rule 50 (STMTS)


state 158

   52 STMTS: STMTS PRINTLN @7 EXPR ';' .

    $default  reduce using rule 52 (STMTS)


state 159

   15 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' OF . BASIC_TYPES

    BOOLEAN  shift, and go to state 28
    REAL     shift, and go to state 29
    STRING   shift, and go to state 30
    INTEGER  shift, and go to state 31

    BASIC_TYPES  go to state 170


state 160

   38 FUNC_VARS_LIST: FUNC_VARS ',' ID ':' . ID_TYPE

    BOOLEAN  shift, and go to state 28
    REAL     shift, and go to state 29
    STRING   shift, and go to state 30
    INTEGER  shift, and go to state 31
    ARRAY    shift, and go to state 32

    ID_TYPE      go to state 171
    BASIC_TYPES  go to state 34


state 161

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG . STMTS END ID ';'

    ';'  shift, and go to state 50

    $default  reduce using rule 44 (STMTS)

    STMTS  go to state 172


state 162

   85 EXPR: ID '[' EXPR ']' .

    $default  reduce using rule 85 (EXPR)


state 163

   86 EXPR: ID '(' ARGS ')' .

    $default  reduce using rule 86 (EXPR)


state 164

   61 STMTS: STMTS WHILE @9 '(' EXPR ')' . @10 DO STMTS END ';'

    $default  reduce using rule 60 (@10)

    @10  go to state 173


state 165

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT . THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF '(' EXPR ')' IF_PREACT . THEN STMTS END ';'

    THEN  shift, and go to state 174


state 166

   48 STMTS: STMTS ID '[' EXPR ']' EQ . EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 175


state 167

   47 STMTS: STMTS ID '[' EXPR ']' ASSIGN . EXPR ';'

    TRUE      shift, and go to state 72
    FALSE     shift, and go to state 73
    STRINGV   shift, and go to state 74
    REALV     shift, and go to state 75
    INTEGERV  shift, and go to state 76
    ID        shift, and go to state 77
    NOTL      shift, and go to state 78
    '-'       shift, and go to state 79
    '('       shift, and go to state 81

    '-'       [reduce using rule 68 (EXPR)]
    $default  reduce using rule 68 (EXPR)

    EXPR  go to state 176


state 168

   62 STMTS: STMTS ID '(' ARGS ')' ';' .

    $default  reduce using rule 62 (STMTS)


state 169

   67 ARG_LIST: ARG_LIST ',' EXPR .
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118

    $default  reduce using rule 67 (ARG_LIST)


state 170

   15 ID_TYPE: ARRAY '[' INTEGERV ',' INTEGERV ']' OF BASIC_TYPES .

    $default  reduce using rule 15 (ID_TYPE)


state 171

   38 FUNC_VARS_LIST: FUNC_VARS ',' ID ':' ID_TYPE .

    $default  reduce using rule 38 (FUNC_VARS_LIST)


state 172

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS . END ID ';'
   46 STMTS: STMTS . ID ASSIGN_SYMBOL EXPR ';'
   47      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   50      | STMTS . PRINT @6 EXPR ';'
   52      | STMTS . PRINTLN @7 EXPR ';'
   53      | STMTS . READ ID ';'
   54      | STMTS . RETURN ';'
   55      | STMTS . RETURN EXPR ';'
   57      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS END ';'
   61      | STMTS . WHILE @9 '(' EXPR ')' @10 DO STMTS END ';'
   62      | STMTS . ID '(' ARGS ')' ';'
   63      | STMTS . ID ';'

    END      shift, and go to state 177
    RETURN   shift, and go to state 58
    WHILE    shift, and go to state 59
    IF       shift, and go to state 60
    ID       shift, and go to state 61
    PRINT    shift, and go to state 62
    PRINTLN  shift, and go to state 63
    READ     shift, and go to state 64


state 173

   61 STMTS: STMTS WHILE @9 '(' EXPR ')' @10 . DO STMTS END ';'

    DO  shift, and go to state 178


state 174

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN . STMTS ELSE @8 STMTS END ';'
   58      | STMTS IF '(' EXPR ')' IF_PREACT THEN . STMTS END ';'

    ';'  shift, and go to state 50

    $default  reduce using rule 44 (STMTS)

    STMTS  go to state 179


state 175

   48 STMTS: STMTS ID '[' EXPR ']' EQ EXPR . ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ';'   shift, and go to state 180


state 176

   47 STMTS: STMTS ID '[' EXPR ']' ASSIGN EXPR . ';'
   70 EXPR: EXPR . '+' EXPR
   71     | EXPR . '-' EXPR
   72     | EXPR . '*' EXPR
   73     | EXPR . '/' EXPR
   74     | EXPR . '%' EXPR
   76     | EXPR . LT EXPR
   77     | EXPR . LEQ EXPR
   78     | EXPR . EQ EXPR
   79     | EXPR . GEQ EXPR
   80     | EXPR . GT EXPR
   81     | EXPR . NEQ EXPR
   82     | EXPR . ANDL EXPR
   83     | EXPR . ORL EXPR

    LT    shift, and go to state 106
    LEQ   shift, and go to state 107
    GT    shift, and go to state 108
    GEQ   shift, and go to state 109
    EQ    shift, and go to state 110
    NEQ   shift, and go to state 111
    ANDL  shift, and go to state 112
    ORL   shift, and go to state 113
    '+'   shift, and go to state 114
    '-'   shift, and go to state 115
    '*'   shift, and go to state 116
    '/'   shift, and go to state 117
    '%'   shift, and go to state 118
    ';'   shift, and go to state 181


state 177

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END . ID ';'

    ID  shift, and go to state 182


state 178

   61 STMTS: STMTS WHILE @9 '(' EXPR ')' @10 DO . STMTS END ';'

    ';'  shift, and go to state 50

    $default  reduce using rule 44 (STMTS)

    STMTS  go to state 183


state 179

   46 STMTS: STMTS . ID ASSIGN_SYMBOL EXPR ';'
   47      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   50      | STMTS . PRINT @6 EXPR ';'
   52      | STMTS . PRINTLN @7 EXPR ';'
   53      | STMTS . READ ID ';'
   54      | STMTS . RETURN ';'
   55      | STMTS . RETURN EXPR ';'
   57      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   57      | STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS . ELSE @8 STMTS END ';'
   58      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS END ';'
   58      | STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS . END ';'
   61      | STMTS . WHILE @9 '(' EXPR ')' @10 DO STMTS END ';'
   62      | STMTS . ID '(' ARGS ')' ';'
   63      | STMTS . ID ';'

    END      shift, and go to state 184
    RETURN   shift, and go to state 58
    WHILE    shift, and go to state 59
    IF       shift, and go to state 60
    ELSE     shift, and go to state 185
    ID       shift, and go to state 61
    PRINT    shift, and go to state 62
    PRINTLN  shift, and go to state 63
    READ     shift, and go to state 64


state 180

   48 STMTS: STMTS ID '[' EXPR ']' EQ EXPR ';' .

    $default  reduce using rule 48 (STMTS)


state 181

   47 STMTS: STMTS ID '[' EXPR ']' ASSIGN EXPR ';' .

    $default  reduce using rule 47 (STMTS)


state 182

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID . ';'

    ';'  shift, and go to state 186


state 183

   46 STMTS: STMTS . ID ASSIGN_SYMBOL EXPR ';'
   47      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   50      | STMTS . PRINT @6 EXPR ';'
   52      | STMTS . PRINTLN @7 EXPR ';'
   53      | STMTS . READ ID ';'
   54      | STMTS . RETURN ';'
   55      | STMTS . RETURN EXPR ';'
   57      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   58      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS END ';'
   61      | STMTS . WHILE @9 '(' EXPR ')' @10 DO STMTS END ';'
   61      | STMTS WHILE @9 '(' EXPR ')' @10 DO STMTS . END ';'
   62      | STMTS . ID '(' ARGS ')' ';'
   63      | STMTS . ID ';'

    END      shift, and go to state 187
    RETURN   shift, and go to state 58
    WHILE    shift, and go to state 59
    IF       shift, and go to state 60
    ID       shift, and go to state 61
    PRINT    shift, and go to state 62
    PRINTLN  shift, and go to state 63
    READ     shift, and go to state 64


state 184

   58 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS END . ';'

    ';'  shift, and go to state 188


state 185

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE . @8 STMTS END ';'

    $default  reduce using rule 56 (@8)

    @8  go to state 189


state 186

   32 FUNC_DECL: FUNC_DECL PROCEDURE ID @4 FUNC_ARGS FUNC_RET @5 VAR_CONST_DECL BEG STMTS END ID ';' .

    $default  reduce using rule 32 (FUNC_DECL)


state 187

   61 STMTS: STMTS WHILE @9 '(' EXPR ')' @10 DO STMTS END . ';'

    ';'  shift, and go to state 190


state 188

   58 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS END ';' .

    $default  reduce using rule 58 (STMTS)


state 189

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 . STMTS END ';'

    ';'  shift, and go to state 50

    $default  reduce using rule 44 (STMTS)

    STMTS  go to state 191


state 190

   61 STMTS: STMTS WHILE @9 '(' EXPR ')' @10 DO STMTS END ';' .

    $default  reduce using rule 61 (STMTS)


state 191

   46 STMTS: STMTS . ID ASSIGN_SYMBOL EXPR ';'
   47      | STMTS . ID '[' EXPR ']' ASSIGN EXPR ';'
   48      | STMTS . ID '[' EXPR ']' EQ EXPR ';'
   50      | STMTS . PRINT @6 EXPR ';'
   52      | STMTS . PRINTLN @7 EXPR ';'
   53      | STMTS . READ ID ';'
   54      | STMTS . RETURN ';'
   55      | STMTS . RETURN EXPR ';'
   57      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';'
   57      | STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS . END ';'
   58      | STMTS . IF '(' EXPR ')' IF_PREACT THEN STMTS END ';'
   61      | STMTS . WHILE @9 '(' EXPR ')' @10 DO STMTS END ';'
   62      | STMTS . ID '(' ARGS ')' ';'
   63      | STMTS . ID ';'

    END      shift, and go to state 192
    RETURN   shift, and go to state 58
    WHILE    shift, and go to state 59
    IF       shift, and go to state 60
    ID       shift, and go to state 61
    PRINT    shift, and go to state 62
    PRINTLN  shift, and go to state 63
    READ     shift, and go to state 64


state 192

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END . ';'

    ';'  shift, and go to state 193


state 193

   57 STMTS: STMTS IF '(' EXPR ')' IF_PREACT THEN STMTS ELSE @8 STMTS END ';' .

    $default  reduce using rule 57 (STMTS)
